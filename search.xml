<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>浅谈安卓系统上的DSU loader</title>
      <link href="/2022/07/04/dsu/"/>
      <url>/2022/07/04/dsu/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是DSU-loader"><a href="#什么是DSU-loader" class="headerlink" title="什么是DSU loader?"></a>什么是DSU loader?</h1><ol><li><code>dsu loader</code>即 <code>动态系统更新</code>可以在使用动态分区的安卓设备上，不影响原来系统的同时安装一个副系统，用于体验最新的原生安卓系统(AOSP)（<strong>博主评：相比传统刷机模式，dsu通过刷入系统到副分区的做法，显然更能降低手机刷机风险，毕竟能在系统崩溃后自动重启到主分区，不过刷入的都是<a href="https://blog.csdn.net/weixin_39839478/article/details/111232514" title="什么是GSI？">GSI</a>，驱动什么的都没有做适配，更别说国内高度定制化rom，能不能启动都是问题，而且就酷安的相关求助帖来看bug很多，也有变砖的，<em>所以我并不推荐尝试DSU</em></strong>）</li><li>动态系统更新 (DSU) 是 Android 10 中引入的一项系统功能，可执行以下操作：<br>a. 将新的 GSI（或其他 Android 系统映像）下载到您的设备上。<br>b. 创建新的动态分区。<br>c. 将下载的 GSI 加载到新的分区。<br>d. 在设备上将 GSI 作为副操作系统启动。<br>e. 通常情况下你的安卓手机有a&#x2F;b分区才能启用此功能.</li><li>想要尝试DSU请确保以下信息<br>您是多年刷机老司机，精通卡刷线刷TWRP<br>系统安卓版本号在安卓11以上<br>手机支持a&#x2F;b动态分区 可通过<a href="https://play.google.com/store/apps/details?id=com.kevintresuelo.treble">Treble Check</a>检测<br>推荐解锁<a href="https://baike.baidu.com/item/Bootloader/8733520"><strong>BootLoader</strong></a>,因为导致手机变砖不可预测</li><li><strong>（免责声明：以上看不懂就别刷了，手机变砖我不管）</strong></li></ol><h1 id="如何使用dsu-loader"><a href="#如何使用dsu-loader" class="headerlink" title="如何使用dsu loader?"></a>如何使用dsu loader?</h1><blockquote><p>以国内color os 为例 系统版本为安卓12</p></blockquote><ol><li>打开手机开发者选项（防小白就不放图和操作了）</li><li>找到DSU Loader</li><li>then Select DSU package（国内厂商的系统一般有两个可选，有GMS字符代表有谷歌基础服务套件的版本）</li><li>选择好版本后静待手机下载，下载完成后会提示重启</li><li>烧香（祈祷手机没事）</li><li>A.准备售后或者自己刷机 B.成功启动，bug巨多</li><li>推荐一个相关的开源项目<a href="https://github.com/VegaBobo/DSU-Sideloader">DSU Sideloader</a></li></ol><blockquote><p>相关资料引用自<a href="https://developer.android.google.cn/?hl=zh-cn">Android 开发者  |  Android Developers (google.cn)</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用gulp-replace实现全局替换jsd cdn加速链接（包括插件）</title>
      <link href="/2022/01/26/gulp-replace/"/>
      <url>/2022/01/26/gulp-replace/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自从jsd官方的ICP被吊销以后，国内的大部分网站速度越来越慢，本文提供一个简单的可行性办法</p><p>使用前您最好先了解gulp<a href="https://akilar.top/posts/49b73b87/">使用 gulp 压缩博客静态资源 | Akilar の糖果屋</a></p><p>您可以参考闰土的<a href="https://blog.cyfan.top/p/c0af86bb.html">欲善其事，必利其器 - 论如何善用ServiceWorker || 陈YFの博客(￣▽￣)” (cyfan.top)</a></p><p>也可用我的一键替换</p></blockquote><h1 id="安装gulp及gulp-replace"><a href="#安装gulp及gulp-replace" class="headerlink" title="安装gulp及gulp-replace"></a>安装gulp及gulp-replace</h1><p>hexo根目录运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-cli -g</span><br><span class="line">npm install gulp -D</span><br><span class="line">npm install --save-dev gulp-replace</span><br></pre></td></tr></table></figure><h1 id="根目录创建文件gulpfile-js"><a href="#根目录创建文件gulpfile-js" class="headerlink" title="根目录创建文件gulpfile.js"></a>根目录创建文件gulpfile.js</h1><p>填写以下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);  <span class="comment">//如果之前有gulp相关插件，请删除此行代码</span></span><br><span class="line"><span class="keyword">const</span> replace = <span class="built_in">require</span>(<span class="string">&#x27;gulp-replace&#x27;</span>);</span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;templates&#x27;</span>, <span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">  gulp.<span class="title function_">src</span>(<span class="string">&#x27;public/**/*.*&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">replace</span>(<span class="string">&#x27;这里填写jsd官方域名&#x27;</span>, <span class="string">&#x27;您需要使用的cdn地址&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;public/&#x27;</span>)),  &#123; <span class="attr">overwrite</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">&#125;);</span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&quot;default&quot;</span>, gulp.<span class="title function_">parallel</span>(<span class="string">&#x27;templates&#x27;</span>));</span><br></pre></td></tr></table></figure><p>根目录运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp</span><br></pre></td></tr></table></figure><p>即可替换成功（会全局替换所有文件的jsd链接）</p><p>GITHUB ACTIONS参考文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"><span class="comment"># 当有改动推送到master分支时，启动Action</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">      <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;14.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install gulp-cli -g #全局安装gulp</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string">        npm i gulp-replace --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string">        gulp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        sudo su root</span></span><br><span class="line"><span class="string">        git config --global user.name &quot;您的github名&quot;</span></span><br><span class="line"><span class="string">        git config --global user.email &quot;您的邮箱</span></span><br><span class="line"><span class="string"></span>      </span><br></pre></td></tr></table></figure><h1 id="以下是参考文档"><a href="#以下是参考文档" class="headerlink" title="以下是参考文档"></a>以下是参考文档</h1><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>简单的字符串替换</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var replace = require(&#x27;gulp-replace&#x27;);</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;templates&#x27;, function()&#123;</span><br><span class="line">  gulp.src([&#x27;file.txt&#x27;])</span><br><span class="line">    .pipe(replace(&#x27;bar&#x27;, &#x27;foo&#x27;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;build/&#x27;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>简单的正则表达式替换</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var replace = require(&#x27;gulp-replace&#x27;);</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;templates&#x27;, function()&#123;</span><br><span class="line">  gulp.src([&#x27;file.txt&#x27;])</span><br><span class="line">    // See https://mdn.io/string.replace#Specifying_a_string_as_a_parameter</span><br><span class="line">    .pipe(replace(/foo(.&#123;3&#125;)/g, &#x27;$1foo&#x27;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;build/&#x27;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>字符串替换为函数回调</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var replace = require(&#x27;gulp-replace&#x27;);</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;templates&#x27;, function()&#123;</span><br><span class="line">  gulp.src([&#x27;file.txt&#x27;])</span><br><span class="line">    .pipe(replace(&#x27;foo&#x27;, function(match) &#123;</span><br><span class="line">      //替换“foo”的实例为“oof”</span><br><span class="line">      return match.reverse();</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;build/&#x27;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>正则表达式替换为函数回调</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var replace = require(&#x27;gulp-replace&#x27;);</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;templates&#x27;, function()&#123;</span><br><span class="line">  gulp.src([&#x27;file.txt&#x27;])</span><br><span class="line">    .pipe(replace(/foo(.&#123;3&#125;)/g, function(match, p1, offset, string) &#123;</span><br><span class="line">      // 用barbaz替换foobaz并记录大量信息</span><br><span class="line">      // See https://mdn.io/string.replace#Specifying_a_function_as_a_parameter</span><br><span class="line">      console.log(&#x27;Found &#x27; + match + &#x27; with param &#x27; + p1 + &#x27; at &#x27; + offset + &#x27; inside of &#x27; + string);</span><br><span class="line">      return &#x27;bar&#x27; + p1;</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;build/&#x27;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>带文件对象的函数回调</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var replace = require(&#x27;gulp-replace&#x27;);</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;templates&#x27;, function()&#123;</span><br><span class="line">  gulp.src([&#x27;file.txt&#x27;])</span><br><span class="line">    .pipe(replace(&#x27;filename&#x27;, function() &#123;</span><br><span class="line">       //替代对象的“文件名”的实例为“file.txt的” </span><br><span class="line">      // this.file也可用于正则表达式替换</span><br><span class="line">      //参见https://github.com/gulpjs/有关可用属性的详细信息乙烯＃实例的属性</span><br><span class="line">      return this.file.relative;</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;build/&#x27;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>API</strong></p><p><code>gulp-replace</code>可以用字符串或正则表达式调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace(string, replacement[, options])</span><br></pre></td></tr></table></figure><ul><li><code>string</code><br>类型： <code>String</code><br>要搜索的字符串。</li><li><code>replacement</code><br>类型：<code>String</code>或<code>Function</code><br>替换字符串或函数。如果<code>replacement</code>是函数，则每次匹配都会调用一次，并将传递要替换的字符串。<br><code>this.file</code>的值将等于正在处理的文件的<a href="https://github.com/gulpjs/vinyl#instance-properties">vinyl instance</a>实例。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace(regex, replacement[, options])</span><br></pre></td></tr></table></figure><ul><li><code>regex</code><br>类型： <code>RegExp</code><br>要搜索的正则表达式模式。</li><li><code>replacement</code><br>类型：<code>String</code>或<code>Function</code><br>替换字符串或函数。有关特殊替换字符串模式和替换函数参数的详细信息<br><code>this.file</code>的值将等于正在处理的文件的<a href="https://github.com/gulpjs/vinyl#instance-properties">vinyl instance</a>实例。</li></ul><p><code>gulp-replace</code>的<code>options</code><br><code>options</code>是可选的第三个参数。</p><ul><li><code>options</code><br>类型： <code>Object</code></li><li><code>options.skipBinary</code><br>类型：<code>boolean</code><br>默认值：<code>true</code><br>跳过二进制文件。默认情况下，此选项为<code>true</code>。如果要替换二进制文件中的内容，则必须将其显式设置为<code>false</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费jsd镜像使用手册（无需申请）</title>
      <link href="/2022/01/26/cdn/"/>
      <url>/2022/01/26/cdn/</url>
      
        <content type="html"><![CDATA[<h1 id="免费JSD镜像使用手册-求打赏"><a href="#免费JSD镜像使用手册-求打赏" class="headerlink" title="免费JSD镜像使用手册(求打赏)"></a>免费JSD镜像使用手册(求打赏)</h1><ol><li><p>如何使用？将你的jsd链接换为cdn1.tianli0.top即可</p><p>您在使用前最好填写申请问卷<a href="https://wj.qq.com/s2/9657320/0bae">https://wj.qq.com/s2/9657320/0bae</a> 在网站关于页面或者底部添加<strong>JSD加速由Tianli提供</strong>（无需使用超链接）<code>注意：如果您在我的友链页面，您无需填写问卷，只需留言</code></p></li><li><p>有使用限制吗？有，使用限制请查看<a href="https://tianli-blog.club/2022/01/26/cdn/#CDN%E6%94%BF%E7%AD%96">CDN政策| Tianli’s blog (tianli-blog.club)</a>和<a href="https://tianli-blog.club/privacy">https://tianli-blog.club/privacy</a></p></li><li><p>速度快吗？依托腾讯云全国cdn，并通过腾讯云COS转存，保证速度<img src="https://cdn.jsdelivr.net/www.jsdelivr.com/35507da1d543c7874252e26e5dd65f505d0f6241/img/network/infographics.png?v=35507da1d543c7874252e26e5dd65f505d0f6241c">类似于jsd的S3转存，只是依托腾讯云为服务</p></li><li><p>使用时被302到了fastly.jsd？因为缓存需要一定的时间，且可能腾讯IP被jsd cdn提供商ban掉，所以第一次访问会302重定向，保证用户体验，当COS中缓存完毕后下一次CDN会自动命中COS，同时COS会刷新全网节点。</p></li><li><p>为什么我jsd文件更新了，cdn1.tianli0.top却没有更新？为保证用户使用体验以及降低费用，COS会以90天为单位删除缓存文件。所以不建议不加版本号使用，我们建议您访问时带上版本号，尽可能的保证您的信息及时更新。</p></li><li><p>遇到了跨域问题（F12时提示CORS）？请发送邮件到<a href="mailto:&#119;&#x75;&#x74;&#x69;&#x61;&#110;&#108;&#x69;&#x40;&#x74;&#105;&#97;&#110;&#105;&#x30;&#x2e;&#x74;&#x6f;&#112;">&#119;&#x75;&#x74;&#x69;&#x61;&#110;&#108;&#x69;&#x40;&#x74;&#105;&#97;&#110;&#105;&#x30;&#x2e;&#x74;&#x6f;&#112;</a>报告问题。（不要选用境外邮箱，可能被加到垃圾邮件）</p></li><li><p>为什么有的东西我没有开压缩，访问却被压缩处理？已开启以下功能</p></li></ol><h3 id="Webp自适应"><a href="#Webp自适应" class="headerlink" title="Webp自适应"></a>Webp自适应</h3><p>   开启Webp压缩后，CDN侧将对满足压缩规则的请求图片自动进行Webp压缩。此功能对原图有限制，详情参见 <a href="https://cloud.tencent.com/document/product/228/43121">图片优化-Webp自适应</a></p><h3 id="Guetzli自适应"><a href="#Guetzli自适应" class="headerlink" title="Guetzli自适应"></a>Guetzli自适应</h3><p>   开启Guetzli压缩后，CDN侧将对满足压缩规则的请求图片自动进行Guetzli压缩。 <a href="https://cloud.tencent.com/document/product/228/43121">什么是Guetzli自适应？</a></p><h3 id="TPG自适应"><a href="#TPG自适应" class="headerlink" title="TPG自适应"></a>TPG自适应</h3><p>   开启TPG压缩后，CDN侧将对满足压缩规则的请求图片自动进行TPG压缩。 <a href="https://cloud.tencent.com/document/product/228/43121">什么是TPG自适应？</a></p><h3 id="HTTP-2-0配置"><a href="#HTTP-2-0配置" class="headerlink" title="HTTP 2.0配置"></a>HTTP 2.0配置</h3><p>   您需要先配置HTTPS证书才可开启此项配置。 <a href="https://cloud.tencent.com/document/product/228/41689">什么是HTTP 2.0？</a></p><h3 id="强制跳转"><a href="#强制跳转" class="headerlink" title="强制跳转"></a>强制跳转</h3><p>   根据配置将用户访问强制跳转为 Https 或 Http。 <a href="https://cloud.tencent.com/document/product/228/41688">什么是 Https 强制跳转？</a></p><p>   Http-&gt;Https</p><h3 id="HSTS配置"><a href="#HSTS配置" class="headerlink" title="HSTS配置"></a>HSTS配置</h3><p>   根据需求开启 HSTS 配置，开启后 CDN 响应增加 Strict-Transport-Security 头部。 <a href="https://cloud.tencent.com/document/product/228/44867">什么是 HSTS 配置？</a></p><h3 id="TLS版本配置"><a href="#TLS版本配置" class="headerlink" title="TLS版本配置"></a>TLS版本配置</h3><p>   CDN默认开启TLS 1.0&#x2F;1.1&#x2F;1.2 ，您可按需关闭&#x2F;开启指定TLS版本。 <a href="https://cloud.tencent.com/document/product/228/44868">什么是 TLS 版本配置？</a></p><p>   TLS 1.0未开启TLS 1.1已开启TLS 1.2已开启TLS 1.3已开启</p><h3 id="OCSP装订配置"><a href="#OCSP装订配置" class="headerlink" title="OCSP装订配置"></a>OCSP装订配置</h3><p>   您需要先配置HTTPS证书才可开启此项配置。 <a href="https://cloud.tencent.com/document/product/228/41690">什么是OCSP装订？</a></p><h3 id="智能压缩"><a href="#智能压缩" class="headerlink" title="智能压缩"></a>智能压缩</h3><p>   开启智能压缩服务，节省传输流量。 <a href="https://cloud.tencent.com/document/product/228/41736">什么是智能压缩？</a></p><ol start="8"><li>MORE？ 请评论区留言</li></ol><h1 id="CDN政策"><a href="#CDN政策" class="headerlink" title="CDN政策"></a>CDN政策</h1><p><strong>CDN免费开放，但是您需悉知以下内容</strong></p><ol><li><p>不得用于违法违规场景的网站加速（包括但不限于GHS&#x2F;薅羊毛&#x2F;有损国家形象等）。违规后该网站主体会进入黑名单。</p></li><li><p>服务器将自动对缓存资源进行自检，如果您的缓存文件存在违规信息，服务器将自动审核并封锁，封锁后请勿发送邮件申诉。</p></li><li><p>使用即代表你同意JSD相关隐私政策。</p></li></ol><h1 id="Acceptable-Use-Policy"><a href="#Acceptable-Use-Policy" class="headerlink" title="Acceptable Use Policy"></a>Acceptable Use Policy</h1><p>   <em>Effective date: February 17, 2021</em></p><p>   Prospect One (“us”, “we”, or “our”) operates the cdn.jsdelivr.net website (the “Service” or “jsDelivr”).</p><p>   By using jsDelivr, you agree to follow this Acceptable Use Policy (the “Policy”). If you are found to be in violation of the Policy at any time, as determined by Prospect One in its sole discretion, we may warn you, prevent you from using our Service, or take any other action we deem appropriate. Please note that we may change our Acceptable Use Policy at any time, and it is your responsibility to keep up-to-date with and adhere to the Policy posted here.</p><h2 id="1-Permitted-Use"><a href="#1-Permitted-Use" class="headerlink" title="1. Permitted Use"></a>1. Permitted Use</h2><p>   jsDelivr works as a CDN for content already stored on npm, GitHub, and other third-party services. These services are not operated by us, and each of them has its own terms of use. Any content accessed via jsDelivr must conform to the terms of the service from which it was retrieved. For example, when you use jsDelivr as a CDN for GitHub, the content must conform to all GitHub’s policies. Additionally, any content accessed via jsDelivr must conform to our own policies as described in this document.</p><p>   As long as you do not violate our rules:</p><ul><li>using jsDelivr is free for both personal and commercial use,</li><li>there are no limits on bandwidth or number of requests,</li><li>we will provide a reasonable level of support via GitHub issues and email for urgent and private matters.</li></ul><h2 id="2-Hard-Limits-and-Restrictions"><a href="#2-Hard-Limits-and-Restrictions" class="headerlink" title="2. Hard Limits and Restrictions"></a>2. Hard Limits and Restrictions</h2><p>   To maintain the performance and security of our Service, we have various limits and restrictions in place. These may include but are not limited to:</p><ul><li>maximum size of a single file,</li><li>maximum number of files in a single package,</li><li>maximum size of a single package,</li><li>blocking of certain file extensions.</li></ul><p>   When requesting a resource that does not meet these limits, you will get an error response indicating the reason. The limits are set considerably higher than needed for most projects and may be further increased or removed for legitimate projects on request.</p><h2 id="3-Soft-Limits-and-Recommendations"><a href="#3-Soft-Limits-and-Recommendations" class="headerlink" title="3. Soft Limits and Recommendations"></a>3. Soft Limits and Recommendations</h2><p>   These limits are not automatically enforced by our Service, but you agree not to exceed them:</p><ol><li>For projects using our GitHub proxy:<ul><li>We recommend that the number of actively accessed files per repository does not exceed 10 000. If you have considerably more files, a custom proxy endpoint for your project may be a better fit.</li><li>The soft limit for the number of files per repository is 100 000.</li></ul></li></ol><h2 id="4-Prohibited-Use"><a href="#4-Prohibited-Use" class="headerlink" title="4. Prohibited Use"></a>4. Prohibited Use</h2><p>   The following behavior is prohibited:</p><ol><li><p>Hosting or accessing content that:</p><ul><li>contains malware or harmful code in any form,</li><li>violates proprietary rights of others,</li><li>is sexually explicit,</li><li>is potentially illegal in the EU or the USA.</li></ul></li><li><p>Abusing the service and its resources, or using jsDelivr as a general-purpose file or media hosting service. This includes, for example:</p><ul><li>running an image hosting website and using jsDelivr as a storage for all uploaded images,</li><li>hosting videos, file backups, or other files in large quantities.</li></ul><p>We recognize that there are legitimate projects that consist of a large number of files, and these are not considered abuse. For example: icons packs, apps, or games with a large number of assets.</p></li><li><p>Trying to bypass our limits or restrictions in any way. We will be happy to remove limits or provide custom solutions for legitimate projects.</p></li></ol><h2 id="5-Additional-Restrictions-in-China"><a href="#5-Additional-Restrictions-in-China" class="headerlink" title="5. Additional Restrictions in China"></a>5. Additional Restrictions in China</h2><p>   jsDelivr holds an ICP license issued by the Chinese government, which allows us to operate infrastructure directly in Mainland China. To keep this license and allow our Chinese users to benefit from the performance improvements it provides, any content served via our Chinese network must conform to Chinese policies. Content potentially violating Chinese policies may be blocked in China without warning.</p><h2 id="6-Limitation-of-Liability"><a href="#6-Limitation-of-Liability" class="headerlink" title="6. Limitation of Liability"></a>6. Limitation of Liability</h2><p>   In no event will the Prospect One and&#x2F;or jsDelivr entities be liable to you or any third party for any direct, indirect, incidental, special, consequential, or punitive damages arising out of or relating to your access to or use of, or your inability to access or use, the websites and online services or any materials or content on the websites and online services, whether based on warranty, contract, tort (including negligence), statute, or any other legal theory, whether or not the Prospect One and&#x2F;or jsDelivr entities have been informed of the possibility of such damage.</p><h2 id="7-Contact-Us"><a href="#7-Contact-Us" class="headerlink" title="7. Contact Us"></a>7. Contact Us</h2><p>   If you have any questions about this Acceptable Use Policy, please contact us:</p><p>   By email: <a href="mailto:dak@prospectone.io">dak@prospectone.io</a></p><h1 id="Privacy-Policy-cdn-jsdelivr-net"><a href="#Privacy-Policy-cdn-jsdelivr-net" class="headerlink" title="Privacy Policy - cdn.jsdelivr.net"></a>Privacy Policy - cdn.jsdelivr.net</h1><p>   <em>Effective date: September 14, 2021</em></p><p>   Prospect One (“us”, “we”, or “our”) operates the cdn.jsdelivr.net website (the “Service”).</p><p>   This page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data.</p><p>   We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy.</p><h2 id="Definitions"><a href="#Definitions" class="headerlink" title="Definitions"></a>Definitions</h2><h4 id="Personal-Data"><a href="#Personal-Data" class="headerlink" title="Personal Data"></a>Personal Data</h4><p>   Personal Data means data about a living individual who can be identified from those data (or from those and other information either in our possession or likely to come into our possession).</p><h4 id="Usage-Data"><a href="#Usage-Data" class="headerlink" title="Usage Data"></a>Usage Data</h4><p>   Usage Data is data collected automatically either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).</p><h4 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h4><p>   Cookies are small pieces of data stored on a User’s device.</p><h4 id="Data-Controller"><a href="#Data-Controller" class="headerlink" title="Data Controller"></a>Data Controller</h4><p>   Data Controller means a person who (either alone or jointly or in common with other persons) determines the purposes for which and the manner in which any personal data are, or are to be, processed.</p><p>   For the purpose of this Privacy Policy, we are a Data Controller of your data.</p><h4 id="Data-Processor-or-Service-Providers"><a href="#Data-Processor-or-Service-Providers" class="headerlink" title="Data Processor (or Service Providers)"></a>Data Processor (or Service Providers)</h4><p>   Data Processor (or Service Provider) means any person (other than an employee of the Data Controller) who processes the data on behalf of the Data Controller.</p><p>   We may use the services of various Service Providers in order to process your data more effectively.</p><h4 id="Data-Subject"><a href="#Data-Subject" class="headerlink" title="Data Subject"></a>Data Subject</h4><p>   Data Subject is any living individual who is the subject of Personal Data.</p><h4 id="User"><a href="#User" class="headerlink" title="User"></a>User</h4><p>   The User is the individual using our Service. The User corresponds to the Data Subject, who is the subject of Personal Data.</p><h2 id="Information-Collection-And-Use"><a href="#Information-Collection-And-Use" class="headerlink" title="Information Collection And Use"></a>Information Collection And Use</h2><p>   We collect several different types of information for various purposes to provide and improve our Service to you.</p><h3 id="Personal-Data-1"><a href="#Personal-Data-1" class="headerlink" title="Personal Data"></a>Personal Data</h3><p>   While using our Service, we will not ask you to provide any personal data. cdn.jsdelivr.net does not require or collect any personal data.</p><h3 id="Usage-Data-1"><a href="#Usage-Data-1" class="headerlink" title="Usage Data"></a>Usage Data</h3><p>   We may collect information how the Service is accessed and used (“Usage Data”). This Usage Data may include information such as your computer’s Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that you visit, the time and date of your visit, the time spent on those pages, unique device identifiers and other diagnostic data.</p><h3 id="Location-Data"><a href="#Location-Data" class="headerlink" title="Location Data"></a>Location Data</h3><p>   We do not use or store information about your location (“Location Data”).</p><h3 id="Tracking-amp-Cookies-Data"><a href="#Tracking-amp-Cookies-Data" class="headerlink" title="Tracking &amp; Cookies Data"></a>Tracking &amp; Cookies Data</h3><p>   We do not use cookies or similar tracking technologies to track your activity on our Service.</p><h2 id="Use-of-Data"><a href="#Use-of-Data" class="headerlink" title="Use of Data"></a>Use of Data</h2><p>   Prospect One uses the collected data for various purposes:</p><ul><li>To provide and maintain our Service</li><li>To notify you about changes to our Service</li><li>To allow you to participate in interactive features of our Service when you choose to do so</li><li>To provide customer support</li><li>To gather analysis or valuable information so that we can improve our Service</li><li>To monitor the usage of our Service</li><li>To detect, prevent and address technical issues</li></ul><h2 id="Retention-of-Data"><a href="#Retention-of-Data" class="headerlink" title="Retention of Data"></a>Retention of Data</h2><p>   Prospect One will retain your Personal Data only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use your Personal Data to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.</p><p>   Prospect One will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of our Service, or we are legally obligated to retain this data for longer time periods.</p><h2 id="Transfer-Of-Data"><a href="#Transfer-Of-Data" class="headerlink" title="Transfer Of Data"></a>Transfer Of Data</h2><p>   Your information, including Personal Data, may be transferred to — and maintained on — computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.</p><p>   If you are located outside Poland and choose to provide information to us, please note that we transfer the data, including Personal Data, to Poland and process it there.</p><p>   Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.</p><p>   Prospect One will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.</p><h2 id="Disclosure-Of-Data"><a href="#Disclosure-Of-Data" class="headerlink" title="Disclosure Of Data"></a>Disclosure Of Data</h2><h3 id="Disclosure-for-Law-Enforcement"><a href="#Disclosure-for-Law-Enforcement" class="headerlink" title="Disclosure for Law Enforcement"></a>Disclosure for Law Enforcement</h3><p>   Under certain circumstances, Prospect One may be required to disclose your Personal Data if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).</p><h3 id="Legal-Requirements"><a href="#Legal-Requirements" class="headerlink" title="Legal Requirements"></a>Legal Requirements</h3><p>   Prospect One may disclose your Personal Data in the good faith belief that such action is necessary to:</p><ul><li>To comply with a legal obligation</li><li>To protect and defend the rights or property of Prospect One</li><li>To prevent or investigate possible wrongdoing in connection with the Service</li><li>To protect the personal safety of users of the Service or the public</li><li>To protect against legal liability</li></ul><h2 id="Security-Of-Data"><a href="#Security-Of-Data" class="headerlink" title="Security Of Data"></a>Security Of Data</h2><p>   The security of your data is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.</p><h2 id="“Do-Not-Track”-Signals"><a href="#“Do-Not-Track”-Signals" class="headerlink" title="“Do Not Track” Signals"></a>“Do Not Track” Signals</h2><p>   We do not support Do Not Track (“DNT”). Do Not Track is a preference you can set in your web browser to inform websites that you do not want to be tracked.</p><p>   You can enable or disable Do Not Track by visiting the Preferences or Settings page of your web browser.</p><h2 id="Your-Rights"><a href="#Your-Rights" class="headerlink" title="Your Rights"></a>Your Rights</h2><p>   Prospect One aims to take reasonable steps to allow you to correct, amend, delete, or limit the use of your Personal Data.</p><p>   If you wish to be informed what Personal Data we hold about you and if you want it to be removed from our systems, please contact us.</p><p>   In certain circumstances, you have the right:</p><ul><li>To access and receive a copy of the Personal Data we hold about you</li><li>To rectify any Personal Data held about you that is inaccurate</li><li>To request the deletion of Personal Data held about you</li><li>You have the right to data portability for the information you provide to Prospect One. You can request to obtain a copy of your Personal Data in a commonly used electronic format so that you can manage and move it.</li></ul><p>   Please note that we may ask you to verify your identity before responding to such requests.</p><h2 id="Service-Providers"><a href="#Service-Providers" class="headerlink" title="Service Providers"></a>Service Providers</h2><p>   We may employ third party companies and individuals to facilitate our Service (“Service Providers”), to provide the Service on our behalf, to perform Service-related services or to assist us in analyzing how our Service is used.</p><p>   These third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.</p><h3 id="Content-Delivery"><a href="#Content-Delivery" class="headerlink" title="Content Delivery"></a>Content Delivery</h3><p>   We use third-party Service Providers to serve all of our traffic under the domain cdn.jsdelivr.net. This means all of these providers have access to your IP address and other information sent by your web browser. This information is used for analytics and security purposes. Neither we nor our providers track any individual user.</p><h4 id="Cloudflare"><a href="#Cloudflare" class="headerlink" title="Cloudflare"></a>Cloudflare</h4><p>   For more information on the privacy practices of Cloudflare, please visit the following web page:<br>   <a href="https://www.cloudflare.com/security-policy/">https://www.cloudflare.com/security-policy/</a></p><h4 id="Fastly"><a href="#Fastly" class="headerlink" title="Fastly"></a>Fastly</h4><p>   For more information on the privacy practices of Fastly, please visit the following web page:<br>   <a href="https://www.fastly.com/privacy">https://www.fastly.com/privacy</a></p><h4 id="Bunny"><a href="#Bunny" class="headerlink" title="Bunny"></a>Bunny</h4><p>   For more information on the privacy practices of Bunny CDN, please visit the following web page:<br>   <a href="https://bunny.net/privacy">https://bunny.net/privacy</a></p><h4 id="Quantil-China-residents-only"><a href="#Quantil-China-residents-only" class="headerlink" title="Quantil (China residents only)"></a>Quantil (China residents only)</h4><p>   We only use Quantil to serve users located in China. For more information on the privacy practices of Quantil, please visit the following web page:<br>   <a href="https://www.quantil.com/privacy-and-security-policy/">https://www.quantil.com/privacy-and-security-policy/</a></p><h2 id="Links-To-Other-Sites"><a href="#Links-To-Other-Sites" class="headerlink" title="Links To Other Sites"></a>Links To Other Sites</h2><p>   Our Service may contain links to other sites that are not operated by us. If you click on a third party link, you will be directed to that third party’s site. We strongly advise you to review the Privacy Policy of every site you visit.</p><p>   We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.</p><h2 id="Children’s-Privacy"><a href="#Children’s-Privacy" class="headerlink" title="Children’s Privacy"></a>Children’s Privacy</h2><p>   Our Service does not address anyone under the age of 13 (“Children”).</p><p>   We do not knowingly collect personally identifiable information from anyone under the age of 13. If you are a parent or guardian and you are aware that your Children has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from children without verification of parental consent, we take steps to remove that information from our servers.</p><h2 id="Changes-To-This-Privacy-Policy"><a href="#Changes-To-This-Privacy-Policy" class="headerlink" title="Changes To This Privacy Policy"></a>Changes To This Privacy Policy</h2><p>   We may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page.</p><p>   We will let you know via email and&#x2F;or a prominent notice on our Service, prior to the change becoming effective and update the “effective date” at the top of this Privacy Policy.</p><p>   You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.</p><h2 id="Contact-Us"><a href="#Contact-Us" class="headerlink" title="Contact Us"></a>Contact Us</h2><p>   If you have any questions about this Privacy Policy, please contact us:</p><p>   By email: <a href="mailto:dak@prospectone.io">dak@prospectone.io</a></p><h1 id="CDN状态"><a href="#CDN状态" class="headerlink" title="CDN状态"></a><a href="https://tiani-blog.club/cdn/index.html">CDN状态</a></h1><a class="btn-beautify pink larger" href="https://tianli-blog.club/cdn/index.html"   title="CDN状态"><i class="far fa-hand-point-right"></i><span>CDN状态</span></a>]]></content>
      
      
      
        <tags>
            
            <tag> jsd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绵阳市高2019级第一次诊断性考试</title>
      <link href="/2021/11/06/2021my1z/"/>
      <url>/2021/11/06/2021my1z/</url>
      
        <content type="html"><![CDATA[<p>(ノ°ο°)ノ<br>答案<a href="https://img1.tianli0.top/2021%E4%B8%80%E8%AF%8A/%E5%8C%96%E5%AD%A6%E7%AD%94%E6%A1%88.doc">https://img1.tianli0.top/2021一诊/化学答案.doc</a><br><a href="https://img1.tianli0.top/2021%E4%B8%80%E8%AF%8A/%E7%89%A9%E7%90%86%E7%AD%94%E6%A1%88.docx">https://img1.tianli0.top/2021一诊/物理答案.docx</a><br><a href="https://img1.tianli0.top/2021%E4%B8%80%E8%AF%8A/%E7%94%9F%E7%89%A9%E7%AD%94%E6%A1%88.docx">https://img1.tianli0.top/2021一诊/生物答案.docx</a><br><a href="https://img1.tianli0.top/2021%E4%B8%80%E8%AF%8A/%E8%8B%B1%E8%AF%AD%E7%AD%94%E6%A1%88.doc">https://img1.tianli0.top/2021一诊/英语答案.doc</a><br><a href="https://img1.tianli0.top/2021%E4%B8%80%E8%AF%8A/%E8%AF%AD%E6%96%87%E7%AD%94%E6%A1%88.docx">https://img1.tianli0.top/2021一诊/语文答案.docx</a><br><a href="https://img1.tianli0.top/2021%E4%B8%80%E8%AF%8A/%E6%95%B0%E5%AD%A6%E7%90%86%E7%A7%91.doc">https://img1.tianli0.top/2021一诊/数学理科.doc</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无服务器部署php程序，以typecho为例</title>
      <link href="/2021/08/10/php-vercel/"/>
      <url>/2021/08/10/php-vercel/</url>
      
        <content type="html"><![CDATA[<blockquote><p>引入：本教程适合无服务器搭建php服务的兄弟们</p><p>注：1.使用此教程的方法最好加上CDN加速，否则访问速度可以逼死你</p></blockquote><p>环境配置：</p><ul><li><input checked="" disabled="" type="checkbox"> 初中英语    </li><li><input checked="" disabled="" type="checkbox"> 能畅通访问github的网络环境</li><li><input checked="" disabled="" type="checkbox"> 懂得提问的智慧</li><li><input checked="" disabled="" type="checkbox"> 愿意折腾的双手</li></ul><h1 id="一-注册Github及Vercel账号，配置git环境"><a href="#一-注册Github及Vercel账号，配置git环境" class="headerlink" title="一.注册Github及Vercel账号，配置git环境"></a>一.注册<a href="https://github.com/">Github</a>及<a href="https://vercel.com/">Vercel</a>账号，配置git环境</h1><h2 id="1-电脑环境配置请参考Git工具配置"><a href="#1-电脑环境配置请参考Git工具配置" class="headerlink" title="1.电脑环境配置请参考Git工具配置"></a>1.电脑环境配置请参考<a href="https://tianli-blog.club/2021/05/04/hexo/#1-1-Git%E5%B7%A5%E5%85%B7%E9%85%8D%E7%BD%AE">Git工具配置</a></h2><h2 id="2-账户配置"><a href="#2-账户配置" class="headerlink" title="2.账户配置"></a>2.账户配置</h2><h3 id="1-1-Github配置"><a href="#1-1-Github配置" class="headerlink" title="1.1.Github配置"></a>1.1.Github配置</h3><ol><li><p>首先你需要一个Github账户</p></li><li><p>新建一个仓库 推荐私人仓</p></li><li><p>在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>生成ssh密钥文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p><p><a href="https://pic4.zhimg.com/v2-d1e47103ec1aa8675f68688c5d63bd27_r.jpg"><img src="https://pic4.zhimg.com/v2-d1e47103ec1aa8675f68688c5d63bd27_r.jpg" alt="img"></a></p><p>img</p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key</p><p><a href="https://pic1.zhimg.com/v2-72a3f22c080e99343c3cc4aabce10e3c_r.jpg"><img src="https://pic1.zhimg.com/v2-72a3f22c080e99343c3cc4aabce10e3c_r.jpg" alt="img"></a></p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:git@github.com">git@github.com</a> ：</p><p><a href="https://pic3.zhimg.com/v2-da481ffa686410becd4186c656b4ebd6_r.jpg"><img src="https://pic3.zhimg.com/v2-da481ffa686410becd4186c656b4ebd6_r.jpg" alt="img"></a></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p></li></ol><h3 id="1-2-Vercel注册"><a href="#1-2-Vercel注册" class="headerlink" title="1.2.Vercel注册"></a>1.2.Vercel注册</h3><p>  根据提示注册（不懂请在评论区留言）ps:其实是我懒</p><h1 id="二-导入Git仓库（伪静态规则由“啊不都”编写）"><a href="#二-导入Git仓库（伪静态规则由“啊不都”编写）" class="headerlink" title="二.导入Git仓库（伪静态规则由“啊不都”编写）"></a>二.导入Git仓库（伪静态规则由“啊不都”编写）</h1><ol><li><p>在Github控制面板 点击new</p></li><li><p><img src="https://img1.tianli0.top/vercel/git%E5%AF%BC%E5%85%A5.png" alt="Git导入"></p></li><li><p>在<code>Your old repository’s clone URL</code>填入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/TIANLI0/php-vercel</span><br></pre></td></tr></table></figure></li><li><p><code>Repository Name</code>自行填写。</p><p><em><strong>注意：将Privacy设置为Private 防止数据库信息泄露</strong></em></p></li><li><p>点击Begin import 等待导入完成</p></li><li><p>点击超链接 修改MySQL数据库内容（可以自行查找数据库 <a href="https://www.gearhost.com/">GearHost</a>，<a href="https://wj.qq.com/s2/8861203/9928/">也可以点此链接进行申请</a>，这里的数据库由我提供 保证运行至少一年 不保证时刻都能正常运行，高三了，没时间管理）</p><iframe height="1200" width="800" src="https://wj.qq.com/s2/8861203/9928/" frameborder="0" allowfullscreen></iframe></li><li><p>在Github修改<code>config.inc.php</code> 填入数据库信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 定义数据库参数 */</span></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Typecho_Db</span>(<span class="string">&#x27;Pdo_Mysql&#x27;</span>, <span class="string">&#x27;typecho_&#x27;</span>);</span><br><span class="line"><span class="variable">$db</span>-&gt;<span class="title function_ invoke__">addServer</span>(<span class="keyword">array</span> (</span><br><span class="line">  <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;请填入数据库地址&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;数据库用户名&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;数据库密码&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;port&#x27;</span> =&gt; <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;database&#x27;</span> =&gt; <span class="string">&#x27;数据库名称&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;engine&#x27;</span> =&gt; <span class="string">&#x27;MyISAM&#x27;</span>,</span><br><span class="line">), <span class="title class_">Typecho_Db</span>::<span class="variable constant_">READ</span> | <span class="title class_">Typecho_Db</span>::<span class="variable constant_">WRITE</span>);</span><br><span class="line"><span class="title class_">Typecho_Db</span>::<span class="title function_ invoke__">set</span>(<span class="variable">$db</span>);</span><br></pre></td></tr></table></figure><p>提交修改</p></li></ol><h1 id="三-导入vercel"><a href="#三-导入vercel" class="headerlink" title="三.导入vercel"></a>三.导入vercel</h1><ol><li><p>打开 <a href="https://vercel.com/">Vercel</a>登录并绑定github账号</p></li><li><p>点击<code>new project</code> 找到刚才自己导入的github仓库 点击 import</p></li><li><p>一直下一步 如果有<code>Create a Team</code>选择skip</p></li><li><p>等待部署完成</p><p>注：最好绑定域名（路径：settings-&gt;domains）最好绑定CDN</p></li></ol><h1 id="四-安装typecho"><a href="#四-安装typecho" class="headerlink" title="四.安装typecho"></a>四.安装typecho</h1><ol><li><p>访问 你的域名&#x2F;install.php</p></li><li><p>按照步骤提示进行操作</p><p>安装完成</p></li><li><p>导入自己的插件以及主题，请将主题和插件的文件下载下来</p><p>然后在右键git bash执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 你的git仓库链接.git</span><br></pre></td></tr></table></figure></li><li><p>打开文件夹</p></li><li><p>将对应文件放至对应目录</p></li><li><p>执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m&#x27;推送内容&#x27;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li><li><p>等待部署完成，去后台修改</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用go-cqhttp搭建一个属于自己的机器人</title>
      <link href="/2021/06/08/qqbot/"/>
      <url>/2021/06/08/qqbot/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不少朋友肯定都想希望QQ像”蓝色飞机”一样搞一个自己的万能bot，可是在之前腾讯把大把机器人都赶尽杀绝，不过github话说有许多不错的项目。今天的教程就教大家搭建一个自己的bot</p></blockquote><h1 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h1><ul><li><p><input checked="" disabled="" type="checkbox"> python3.8或以上</p></li><li><p><input checked="" disabled="" type="checkbox"> linux或者Windows服务器（本文以linux为例）</p></li><li><p><input checked="" disabled="" type="checkbox"> screen</p></li><li><p><input checked="" disabled="" type="checkbox"> docker</p></li><li><p><input checked="" disabled="" type="checkbox"> 一个会折腾的人</p></li><li><p><input disabled="" type="checkbox"> 会百度的双手</p><p>上述环境请自行百度安装</p></li></ul><h1 id="2-机器人搭建"><a href="#2-机器人搭建" class="headerlink" title="2.机器人搭建"></a>2.机器人搭建</h1><h2 id="2-1-CQ端介绍"><a href="#2-1-CQ端介绍" class="headerlink" title="2.1.CQ端介绍"></a>2.1.CQ端介绍</h2><p>这里的CQ端是指将qq消息加以处理的服务</p><p>CQ端有很多项目 <img src="https://github-readme-stats.vercel.app/api/pin/?username=Mrs4s&repo=go-cqhttp" alt="Readme Card"><a href="https://github.com/Mrs4s/go-cqhttp">Mrs4s&#x2F;go-cqhttp: cqhttp的golang实现，轻量、原生跨平台. (github.com)</a></p><p>这里推荐这个，相比<a href="https://github.com/mamoe/mirai">mirai</a>部署简单</p><h2 id="2-2CQ端搭建"><a href="#2-2CQ端搭建" class="headerlink" title="2.2CQ端搭建"></a>2.2CQ端搭建</h2><ol><li><p>cd进入对应目录并下载<a href="https://github.com/Mrs4s/go-cqhttp">Mrs4s&#x2F;go-cqhttp: cqhttp的golang实现，轻量、原生跨平台. (github.com)</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com.cnpmjs.org/Mrs4s/go-cqhttp/releases/download/v1.0.0-beta4/go-cqhttp_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf go-cqhttp_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>赋权</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x go-cqhttp</span><br></pre></td></tr></table></figure></li><li><p>首次执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./go-cqhttp</span><br></pre></td></tr></table></figure></li><li><p>按照提示操作 让你选择运行方式的时候填入123</p></li><li><p>go-cqhttp创建<code>_config.yml</code>成功 自行将默认配置项修改为这个（按照注释提示操作）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># go-cqhttp 默认配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">account:</span> <span class="comment"># 账号相关</span></span><br><span class="line">  <span class="attr">uin:</span>  <span class="comment"># QQ账号</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 建议不填写</span></span><br><span class="line">  <span class="attr">encrypt:</span> <span class="literal">false</span>  <span class="comment"># 是否开启密码加密</span></span><br><span class="line">  <span class="attr">status:</span> <span class="number">0</span>      <span class="comment"># 在线状态 请参考 https://docs.go-cqhttp.org/guide/config.html#在线状态</span></span><br><span class="line">  <span class="attr">relogin:</span> <span class="comment"># 重连设置</span></span><br><span class="line">    <span class="attr">delay:</span> <span class="number">3</span>   <span class="comment"># 首次重连延迟, 单位秒</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">3</span>   <span class="comment"># 重连间隔</span></span><br><span class="line">    <span class="attr">max-times:</span> <span class="number">0</span>  <span class="comment"># 最大重连次数, 0为无限制</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 是否使用服务器下发的新地址进行重连</span></span><br><span class="line">  <span class="comment"># 注意, 此设置可能导致在海外服务器上连接情况更差</span></span><br><span class="line">  <span class="attr">use-sso-address:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">heartbeat:</span></span><br><span class="line">  <span class="comment"># 心跳频率, 单位秒</span></span><br><span class="line">  <span class="comment"># -1 为关闭心跳</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">message:</span></span><br><span class="line">  <span class="comment"># 上报数据类型</span></span><br><span class="line">  <span class="comment"># 可选: string,array</span></span><br><span class="line">  <span class="attr">post-format:</span> <span class="string">array</span></span><br><span class="line">  <span class="comment"># 是否忽略无效的CQ码, 如果为假将原样发送</span></span><br><span class="line">  <span class="attr">ignore-invalid-cqcode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否强制分片发送消息</span></span><br><span class="line">  <span class="comment"># 分片发送将会带来更快的速度</span></span><br><span class="line">  <span class="comment"># 但是兼容性会有些问题</span></span><br><span class="line">  <span class="attr">force-fragment:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否将url分片发送</span></span><br><span class="line">  <span class="attr">fix-url:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 下载图片等请求网络代理</span></span><br><span class="line">  <span class="attr">proxy-rewrite:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># 是否上报自身消息</span></span><br><span class="line">  <span class="attr">report-self-message:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 移除服务端的Reply附带的At</span></span><br><span class="line">  <span class="attr">remove-reply-at:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 为Reply附加更多信息</span></span><br><span class="line">  <span class="attr">extra-reply-data:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">output:</span></span><br><span class="line">  <span class="comment"># 日志等级 trace,debug,info,warn,error</span></span><br><span class="line">  <span class="attr">log-level:</span> <span class="string">warn</span></span><br><span class="line">  <span class="comment"># 是否启用 DEBUG</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 开启调试模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认中间件锚点</span></span><br><span class="line"><span class="attr">default-middlewares:</span> <span class="meta">&amp;default</span></span><br><span class="line">  <span class="comment"># 访问密钥, 强烈推荐在公网的服务器设置</span></span><br><span class="line">  <span class="attr">access-token:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># 事件过滤器文件目录</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># API限速设置</span></span><br><span class="line">  <span class="comment"># 该设置为全局生效</span></span><br><span class="line">  <span class="comment"># 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配</span></span><br><span class="line">  <span class="comment"># 目前该限速设置为令牌桶算法, 请参考:</span></span><br><span class="line">  <span class="comment"># https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin</span></span><br><span class="line">  <span class="attr">rate-limit:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span> <span class="comment"># 是否启用限速</span></span><br><span class="line">    <span class="attr">frequency:</span> <span class="number">1</span>  <span class="comment"># 令牌回复频率, 单位秒</span></span><br><span class="line">    <span class="attr">bucket:</span> <span class="number">1</span>     <span class="comment"># 令牌桶大小</span></span><br><span class="line"></span><br><span class="line"><span class="attr">database:</span> <span class="comment"># 数据库相关设置</span></span><br><span class="line">  <span class="attr">leveldb:</span></span><br><span class="line">    <span class="comment"># 是否启用内置leveldb数据库</span></span><br><span class="line">    <span class="comment"># 启用将会增加10-20MB的内存占用和一定的磁盘空间</span></span><br><span class="line">    <span class="comment"># 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接服务列表</span></span><br><span class="line"><span class="attr">servers:</span></span><br><span class="line">  <span class="comment"># 添加方式，同一连接方式可添加多个，具体配置说明请查看文档</span></span><br><span class="line">  <span class="comment">#- http: # http 通信</span></span><br><span class="line">  <span class="comment">#- ws:   # 正向 Websocket</span></span><br><span class="line">  <span class="comment">#- ws-reverse: # 反向 Websocket</span></span><br><span class="line">  <span class="comment">#- pprof: #性能分析服务器</span></span><br><span class="line">  <span class="comment"># HTTP 通信设置</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="comment"># 服务端监听地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">      <span class="comment"># 服务端监听端口</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">5700</span></span><br><span class="line">      <span class="comment"># 反向HTTP超时时间, 单位秒</span></span><br><span class="line">      <span class="comment"># 最小值为5，小于5将会忽略本项设置</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">middlewares:</span></span><br><span class="line">        <span class="string">&lt;&lt;:</span> <span class="string">*default</span> <span class="comment"># 引用默认中间件</span></span><br><span class="line">      <span class="comment"># 反向HTTP POST地址列表</span></span><br><span class="line">      <span class="attr">post:</span></span><br><span class="line">      <span class="comment">#- url: &#x27;&#x27; # 地址</span></span><br><span class="line">      <span class="comment">#  secret: &#x27;&#x27;           # 密钥</span></span><br><span class="line">      <span class="comment">#- url: 127.0.0.1:5701 # 地址</span></span><br><span class="line">      <span class="comment">#  secret: &#x27;&#x27;          # 密钥</span></span><br><span class="line">  <span class="comment"># 正向WS设置</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ws:</span></span><br><span class="line">      <span class="comment"># 正向WS服务器监听地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">      <span class="comment"># 正向WS服务器监听端口</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">6700</span></span><br><span class="line">      <span class="attr">middlewares:</span></span><br><span class="line">        <span class="string">&lt;&lt;:</span> <span class="string">*default</span> <span class="comment"># 引用默认中间件</span></span><br><span class="line">  <span class="comment"># 反向WS设置 下面是ATRI的ws 不需要请注释掉</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ws-reverse:</span></span><br><span class="line">      <span class="comment"># 反向WS Universal 地址</span></span><br><span class="line">      <span class="comment"># 注意 设置了此项地址后下面两项将会被忽略</span></span><br><span class="line">      <span class="attr">universal:</span> <span class="string">ws://127.0.0.1:20000/cqhttp/ws</span></span><br><span class="line">      <span class="comment"># 反向WS API 地址</span></span><br><span class="line">      <span class="attr">api:</span> <span class="string">ws://your_websocket_api.server</span></span><br><span class="line">      <span class="comment"># 反向WS Event 地址</span></span><br><span class="line">      <span class="attr">event:</span> <span class="string">ws://your_websocket_event.server</span></span><br><span class="line">      <span class="comment"># 重连间隔 单位毫秒</span></span><br><span class="line">      <span class="attr">reconnect-interval:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">middlewares:</span></span><br><span class="line">        <span class="string">&lt;&lt;:</span> <span class="string">*default</span> <span class="comment"># 引用默认中间件</span></span><br><span class="line">  <span class="comment"># 下面是RSS机器人的ws,不需要请注释掉</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ws-reverse:</span></span><br><span class="line">      <span class="comment"># 是否禁用当前反向WS服务</span></span><br><span class="line">      <span class="attr">disabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="comment"># 反向WS Universal 地址</span></span><br><span class="line">      <span class="comment"># 注意 设置了此项地址后下面两项将会被忽略</span></span><br><span class="line">      <span class="attr">universal:</span> <span class="string">ws://127.0.0.1:8181/cqhttp/ws/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>再次执行首次执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./go-cqhttp</span><br></pre></td></tr></table></figure></li><li><p>看见终端输出正常 qq扫码登录</p></li><li><p><code>ctrl</code>+<code>c</code>退出备用</p></li></ol><h2 id="2-3-服务端"><a href="#2-3-服务端" class="headerlink" title="2.3.服务端"></a>2.3.服务端</h2><p>服务端也就是你机器人的大脑。</p><p>这里有很多选择，本文将会介绍RSS机器人以及两个闲聊型机器人</p><h3 id="2-3-1-ELFRSS"><a href="#2-3-1-ELFRSS" class="headerlink" title="2.3.1.ELFRSS"></a><a href="https://github.com/Quan666/ELF_RSS">2.3.1.ELFRSS</a></h3><p><img src="https://github-readme-stats.vercel.app/api/pin/?username=Quan666&repo=ELF_RSS" alt="RSS"></p><p><strong>ELF_RSS</strong></p><blockquote><ol><li>容易使用的命令</li><li>更规范的代码，方便移植到你自己的机器人</li><li>使用全新的 <a href="https://v2.nonebot.dev/guide/">Nonebot2</a> 框架</li></ol></blockquote><p>这是一个以 Python 编写的 QQ 机器人插件，用于订阅 RSS 并实时以 QQ消息推送。</p><p><strong>功能介绍</strong></p><ul><li>发送QQ消息来动态增、删、查、改 RSS 订阅</li><li>订阅内容翻译（使用谷歌机翻，可设置为百度翻译）</li><li>短链接（自己的短链接服务, 可移除）</li><li>个性化订阅设置（更新频率、翻译、仅标题、仅图片等）</li><li>多平台支持</li><li>图片压缩后发送</li><li>种子下载并上传到群文件</li><li>消息支持根据链接、标题、图片去重</li><li>可设置只发送限定数量的图片，防止刷屏</li><li>可设置从正文中要移除的指定内容，支持正则</li></ul><h4 id="2-3-1-1部署"><a href="#2-3-1-1部署" class="headerlink" title="2.3.1.1部署"></a>2.3.1.1部署</h4><ol><li><p>运行命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.jsdelivr.net/gh/TIANLI0/ELF_RSS/install.sh</span><br><span class="line">sh install.sh</span><br></pre></td></tr></table></figure></li><li><p>不要选择配置go-cqhttp</p></li><li><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ELF_RSS &amp;&amp; pip install nb-cli &amp;&amp; pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li><li><p>在&#x2F;ELF_RSS目录修改配置文件<code>.env</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENVIRONMENT=dev</span><br><span class="line">VERSION=&#x27;v2.2.5&#x27;</span><br></pre></td></tr></table></figure></li><li><p>按照注释修改<code>.env.dev</code>（基本上只需要换个超级管理员和百度翻译）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">HOST=0.0.0.0  # 配置 NoneBot 监听的 IP/主机名</span><br><span class="line">PORT=8181  # 配置 NoneBot 监听的端口</span><br><span class="line">DEBUG=false  # 开启 debug 模式 **请勿在生产环境开启**</span><br><span class="line">SUPERUSERS=[&quot;507249007&quot;]  # 配置 NoneBot 超级用户 # 管理员qq,支持多管理员，逗号分隔 注意，启动消息只发送给第一个管理员</span><br><span class="line">NICKNAME=[&quot;RSSBOT&quot;, &quot;ATRI&quot;]  # 配置机器人的昵称</span><br><span class="line">COMMAND_START=[&quot;&quot;,&quot;/&quot;]  # 配置命令起始字符</span><br><span class="line">COMMAND_SEP=[&quot;.&quot;]  # 配置命令分割字符</span><br><span class="line"></span><br><span class="line">RSS_PROXY=&#x27;127.0.0.1:7890&#x27;  # 代理地址</span><br><span class="line">RSSHUB=&#x27;https://rss.tianli0.top&#x27;  # rsshub订阅地址</span><br><span class="line">RSSHUB_BACKUP=[&quot;https://rsshub.app&quot;]  # 备用rsshub地址 填写示例 [&quot;https://rsshub.app&quot;,&quot;https://rsshub.app&quot;],务必使用双引号！！！</span><br><span class="line">DB_CACHE_EXPIRE=30  # 去重数据库的记录清理限定天数</span><br><span class="line">LIMIT=50  # 缓存rss条数</span><br><span class="line"></span><br><span class="line"># 图片压缩</span><br><span class="line">ZIP_SIZE=2048 # 非 GIF 图片压缩后的最大长宽值,单位 px</span><br><span class="line">GIF_ZIP_SIZE=6144 # GIF 图片压缩临界值,单位 KB</span><br><span class="line"></span><br><span class="line">BLOCKQUOTE=true    #是否显示转发的内容(主要是微博)，默认打开，如果关闭还有转发的信息的话，可以自行添加进屏蔽词(但是这整条消息就会没)</span><br><span class="line">BLACK_WORD=[]   #屏蔽词填写 支持正则,如 [&quot;互动抽奖&quot;,&quot;微博抽奖平台&quot;]( ,务必使用双引号！！！</span><br><span class="line"></span><br><span class="line">#使用百度翻译API 可选，填的话两个都要填，不填默认使用谷歌翻译(需墙外？)</span><br><span class="line"># Baidu Translate API</span><br><span class="line">BAIDU_ID=&#x27;&#x27;</span><br><span class="line">BAIDU_KEY=&#x27;&#x27;</span><br><span class="line">#百度翻译接口appid和secretKey，前往http://api.fanyi.baidu.com/获取</span><br><span class="line">#一般来说申请标准版免费就够了，想要好一点可以认证上高级版，有月限额，rss用也足够了</span><br><span class="line"></span><br><span class="line"># 解决pixiv.cat无法访问问题</span><br><span class="line">CLOSE_PIXIV_CAT=false  # 是否关闭使用 pixiv.cat，关闭后注意启动代理</span><br><span class="line"></span><br><span class="line"># 如果你是Linux部署的，请开启此项</span><br><span class="line">IS_LINUX=true</span><br><span class="line"></span><br><span class="line"># qbittorrent 相关设置(文件下载位置等更多设置请在qbittorrent软件中设置)</span><br><span class="line">IS_OPEN_AUTO_DOWN_TORRENT=false # 是否打开自动下载种子</span><br><span class="line">QB_WEB_URL=&#x27;http://127.0.0.1:8081&#x27; #qbittorrent 客户端默认是关闭状态，请打开并设置端口号为 8081，同时勾选 “对本地主机上的客户端跳过身份验证”</span><br><span class="line">DOWN_STATUS_MSG_GROUP=[] # 下载进度消息提示群组 示例 [12345678] 注意：最好是将该群设置为免打扰</span><br><span class="line">DOWN_STATUS_MSG_DATE=10 # 下载进度检查及提示间隔时间，秒，不建议小于 10s</span><br><span class="line"></span><br><span class="line"># MYELF博客地址 https://myelf.club</span><br><span class="line"># 出现问题请在 GitHub 上提 issues</span><br><span class="line"># 项目地址 https://github.com/Quan666/ELF_RSS</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R RSS</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run</span><br></pre></td></tr></table></figure></li><li><p>启动成功</p></li></ol><h3 id="2-3-2-ATRI搭建（博主基于kt开发了一个功能一样的版本，但是由于高三学业繁忙，暂不开源）"><a href="#2-3-2-ATRI搭建（博主基于kt开发了一个功能一样的版本，但是由于高三学业繁忙，暂不开源）" class="headerlink" title="2.3.2.ATRI搭建（博主基于kt开发了一个功能一样的版本，但是由于高三学业繁忙，暂不开源）"></a><a href="https://github.com/Kyomotoi/ATRI/">2.3.2.ATRI搭建（博主基于kt开发了一个功能一样的版本，但是由于高三学业繁忙，暂不开源）</a></h3><p><strong>关于</strong></p><p>本项目名称、灵感均来自 <a href="https://aniplex-exe.com/">ANIPLEX</a> 发行的 <a href="https://atri-mdm.com/">ATRI-My Dear Moments-</a></p><p>本项目中所使用的任何有关 ATRI 的图标、LOGO，解释权、著作权均归 <a href="https://aniplex-exe.com/">ANIPLEX</a>。你可以<a href="https://aniplex-exe.com/guidelines/">在此</a>查看相关内容</p><p>为QQ群中复现一个功能性机器人是本项目的目标</p><p>项目功能&amp;指令： <code>全局启用 | /nsfw | 来杯红茶 | 重置红茶 | 涩图总量 | 休眠 | 解封群 | 来句笑话 | /help | 涩批一下 | setu设置 | 我要离婚 | /ping | 口臭 | 解封用户 | track | 申请列表 | 苏醒 | 不够涩 | 启用功能 | 广播 | /code | /roll | 以图搜番 | 一言 | 查老婆 | 关机 | 全局禁用 | 封禁用户 | /fakemsg | 抽老婆 | 以图搜图 | 添加涩图 | 封禁群 | /status | setu | 今天吃什么 | 获取log | 删除涩图 | 禁用功能 | /enc</code><br><code>没反应可能是没权限...或者为探测类型...不属于可直接触发命令...（会自动将bot检测到的setu发送给超级超级管理员：监测撤回信息并转发给管理员）</code></p><p><img src="https://github-readme-stats.vercel.app/api/pin/?username=Kyomotoi&repo=ATRI" alt="Readme Card"></p><ol><li><p>关掉当前SSH，再开一个。执行git clone</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com.cnpmjs.org/Kyomotoi/ATRI.git</span><br></pre></td></tr></table></figure></li><li><p>新建镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R ATRI</span><br></pre></td></tr></table></figure></li><li><p>修改&#x2F;ATRI目录的<code>config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">BotSelfConfig:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">20000</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">superusers:</span> [<span class="string">&quot;507249007&quot;</span>,<span class="string">&quot;3345891696&quot;</span>,<span class="string">&quot;3249257025&quot;</span>]<span class="comment">#超级管理员</span></span><br><span class="line">  <span class="attr">nickname:</span> [<span class="string">&quot;ATRI&quot;</span>, <span class="string">&quot;Atri&quot;</span>, <span class="string">&quot;atri&quot;</span>, <span class="string">&quot;亚托莉&quot;</span>, <span class="string">&quot;アトリ&quot;</span>]</span><br><span class="line">  <span class="attr">command_start:</span> [<span class="string">&quot;&quot;</span>, <span class="string">&quot;/&quot;</span>]</span><br><span class="line">  <span class="attr">command_sep:</span> [<span class="string">&quot;.&quot;</span>]</span><br><span class="line">  <span class="attr">session_expire_timeout:</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="attr">NetworkPost:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5700</span></span><br><span class="line"></span><br><span class="line"><span class="attr">AdminPage:</span>  <span class="comment"># 待定，无用</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">20002</span></span><br><span class="line"></span><br><span class="line"><span class="attr">NsfwCheck:</span>  <span class="comment"># 详细请查看文档以获取帮助</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">passing_rate:</span> <span class="number">85</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">SauceNAO:</span> <span class="comment">#以图搜图api  https://saucenao.com/user.php?page=search-api</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Setu:</span>  <span class="comment"># https://api.lolicon.app/#/setu 色图API</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>执行(配置nsfw检测)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -p 127.0.0.1:5000:5000/tcp --<span class="built_in">env</span> PORT=5000 eugencepoi/nsfw_api:latest</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt &amp;&amp; py main.py</span><br></pre></td></tr></table></figure></li><li><p>关掉当前SSH窗口</p></li></ol><h3 id="2-3-3-ZeroBot-Plugin"><a href="#2-3-3-ZeroBot-Plugin" class="headerlink" title="2.3.3.ZeroBot-Plugin"></a><a href="https://github.com/Yiwen-Chan/ZeroBot-Plugin">2.3.3.ZeroBot-Plugin</a></h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><p>聊天 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/chat&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> [BOT名字]</li><li><input checked="" disabled="" type="checkbox"> [戳一戳BOT]</li><li><input checked="" disabled="" type="checkbox"> 空调开</li><li><input checked="" disabled="" type="checkbox"> 空调关</li><li><input checked="" disabled="" type="checkbox"> 群温度</li><li><input checked="" disabled="" type="checkbox"> 设置温度[正整数]</li></ul></li><li><p>椛椛 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/huahua&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 具体指令看代码</li></ul></li><li><p>ATRI <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/atri&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 具体指令看代码</li><li>注：本插件基于 <a href="https://github.com/Kyomotoi/ATRI">ATRI</a> ，为 Golang 移植版</li></ul></li><li><p>群管 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/manager&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 禁言[@xxx][分钟]</li><li><input checked="" disabled="" type="checkbox"> 解除禁言[@xxx]</li><li><input checked="" disabled="" type="checkbox"> 我要自闭 [分钟]</li><li><input checked="" disabled="" type="checkbox"> 开启全员禁言</li><li><input checked="" disabled="" type="checkbox"> 解除全员禁言</li><li><input checked="" disabled="" type="checkbox"> 升为管理[@xxx]</li><li><input checked="" disabled="" type="checkbox"> 取消管理[@xxx]</li><li><input checked="" disabled="" type="checkbox"> 修改名片[@xxx][xxx]</li><li><input checked="" disabled="" type="checkbox"> 修改头衔[@xxx][xxx]</li><li><input checked="" disabled="" type="checkbox"> 申请头衔[xxx]</li><li><input checked="" disabled="" type="checkbox"> 踢出群聊[@xxx]</li><li><input checked="" disabled="" type="checkbox"> 退出群聊[群号]</li><li><input checked="" disabled="" type="checkbox"> *入群欢迎</li><li><input checked="" disabled="" type="checkbox"> *退群通知</li><li><input checked="" disabled="" type="checkbox"> 在[月份]月[日期]日的[小时]点[分钟]分时(用[url])提醒大家[消息]</li><li><input checked="" disabled="" type="checkbox"> 在[月份]月[每周or周几]的[小时]点[分钟]分时(用[url])提醒大家[消息]</li><li><input checked="" disabled="" type="checkbox"> 取消在[月份]月[日期]日的[小时]点[分钟]分的提醒</li><li><input checked="" disabled="" type="checkbox"> 取消在[月份]月[每周or周几]的[小时]点[分钟]分的提醒</li><li><input disabled="" type="checkbox"> 同意入群请求</li><li><input disabled="" type="checkbox"> 同意好友请求</li><li><input disabled="" type="checkbox"> 撤回[@xxx] [xxx]</li><li><input disabled="" type="checkbox"> 警告[@xxx]</li><li><input checked="" disabled="" type="checkbox"> run[xxx]</li></ul></li><li><p>涩图 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/setutime&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 来份[涩图&#x2F;二次元&#x2F;风景&#x2F;车万]</li><li><input checked="" disabled="" type="checkbox"> 添加[涩图&#x2F;二次元&#x2F;风景&#x2F;车万][P站图片ID]</li><li><input checked="" disabled="" type="checkbox"> 删除[涩图&#x2F;二次元&#x2F;风景&#x2F;车万][P站图片ID]</li><li><input checked="" disabled="" type="checkbox"> <blockquote><p>setu status</p></blockquote></li><li><input checked="" disabled="" type="checkbox"> <blockquote><p>setu xml</p></blockquote></li><li><input checked="" disabled="" type="checkbox"> <blockquote><p>setu pic</p></blockquote></li></ul></li><li><p>搜图 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/picsearcher&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 以图搜图|搜索图片|以图识图[图片]</li><li><input checked="" disabled="" type="checkbox"> 搜图[P站图片ID]</li></ul></li><li><p>简易随机图片(调用url) <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/randimg&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 随机图片</li><li><input checked="" disabled="" type="checkbox"> 设置随机图片网址[url]</li></ul></li><li><p>点歌 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/music&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 点歌[xxx]</li><li><input checked="" disabled="" type="checkbox"> 网易点歌[xxx]</li><li><input checked="" disabled="" type="checkbox"> 酷我点歌[xxx]</li><li><input checked="" disabled="" type="checkbox"> 酷狗点歌[xxx]</li></ul></li><li><p>shindan <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/shindan&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> 今天是什么少女[@xxx] </li><li><input checked="" disabled="" type="checkbox"> 异世界转生[@xxx] </li><li><input checked="" disabled="" type="checkbox"> 卖萌[@xxx]</li></ul></li><li><p>GitHub仓库搜索 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/github&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> <blockquote><p>github [xxx] </p></blockquote></li><li><input checked="" disabled="" type="checkbox"> <blockquote><p>github -p [xxx]</p></blockquote></li></ul></li><li><p>在线代码运行 <code>import _ &quot;github.com/Yiwen-Chan/ZeroBot-Plugin/runcode&quot;</code></p><ul><li><input checked="" disabled="" type="checkbox"> <blockquote><p>runcode help</p></blockquote></li><li><input checked="" disabled="" type="checkbox"> <blockquote><p>runcode [on&#x2F;off]</p></blockquote></li><li><input checked="" disabled="" type="checkbox"> <blockquote><p>runcode [language] [code block]</p></blockquote></li></ul><p>  <img src="https://github-readme-stats.vercel.app/api/pin/?username=Yiwen-Chan&repo=ZeroBot-Plugin" alt="Readme Card"></p></li></ul><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><ol><li><p><a href="https://github.com/TIANLI0/ZeroBot-Plugin">TIANLI0&#x2F;ZeroBot-Plugin: 基于 ZeroBot 的 OneBot 插件 (github.com)</a>点击这里 Fork 修改<code>main.go</code>（没提供原作者的是因为已知最新版有bug无法编译）</p></li><li><p>打开github action 等待编译成功 选择对应版本，去actions&#x2F;job详情页下载 解压 并上传至服务器</p></li><li><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R huahua</span><br></pre></td></tr></table></figure></li><li><p>解压 赋权并启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x ZeroBot-Plugin-linux ./ZeroBot-Plugin-linux</span><br></pre></td></tr></table></figure></li><li><p>启动成功，关闭当前SSH窗口</p></li></ol><h3 id="ATRI-kotlin暂时不考虑开源"><a href="#ATRI-kotlin暂时不考虑开源" class="headerlink" title="ATRI-kotlin暂时不考虑开源"></a>ATRI-kotlin暂时不考虑开源</h3><h2 id="3-启动bot"><a href="#3-启动bot" class="headerlink" title="3.启动bot"></a>3.启动bot</h2><ol><li><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R QQ</span><br></pre></td></tr></table></figure></li><li><p>运行程序</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./go-cqhttp</span><br></pre></td></tr></table></figure></li><li><p>此时你的QQ应该会收到bot的消息<img src="https://img1.tianli0.top/qqbot/1623141666750.png"></p></li><li><p>调试：输入对应的screen -R指令</p></li></ol><h2 id="4-结束"><a href="#4-结束" class="headerlink" title="4.结束"></a>4.结束</h2><p>bot需要自己去摸索 强烈建议有能力的自己参考官方文档自己写</p><p>对于前端：请在github搜索koshi 这是基于Nodejs的框架</p><p><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.10/12311680.png"><br><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.9/184064205.png"><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.9/184064205.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> bot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的Hexo博客搭建</title>
      <link href="/2021/05/04/hexo/"/>
      <url>/2021/05/04/hexo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：哪个男孩不想拥有自己的网站呢？</p><p>hexo简介：Hexo 是一个基于<a href="http://www.oschina.net/p/nodejs">nodejs</a> 的静态博客网站生成器，作者是来自台湾的 <a href="http://mailto:tommy351@gmail.com/">Tommy Chen</a>重点是不需要配置服务器，基本上都能白嫖</p><p>基本要求：初中英语</p></blockquote><h1 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1.环境配置"></a>1.环境配置</h1><p>所需环境：</p><ul><li><input checked="" disabled="" type="checkbox"> 1.nodejs14</li><li><input checked="" disabled="" type="checkbox"> 2.git</li><li><input checked="" disabled="" type="checkbox"> 3.Hexo cli</li><li><input checked="" disabled="" type="checkbox"> 4.markdown编辑器</li></ul><h2 id="1-1-Git工具配置"><a href="#1-1-Git工具配置" class="headerlink" title="1.1.Git工具配置"></a>1.1.Git工具配置</h2><blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote><p>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载安装。</p><p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><p>以Centos为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>安装好后，用<code>git --version</code> 来查看一下版本</p><h3 id="拓展内容-Git小乌龟的安装及使用"><a href="#拓展内容-Git小乌龟的安装及使用" class="headerlink" title="拓展内容 Git小乌龟的安装及使用"></a>拓展内容 Git小乌龟的安装及使用</h3><blockquote><p>Git小乌龟是Windows平台的一款Git管理工具，适用于不怎么喜欢使用命令行的人</p></blockquote><p>请参考链接 <a href="https://www.jianshu.com/p/33108325fc87">Git小乌龟的安装及使用 - 简书 (jianshu.com)</a></p><h2 id="1-2-Nodejs的安装"><a href="#1-2-Nodejs的安装" class="headerlink" title="1.2.Nodejs的安装"></a>1.2.Nodejs的安装</h2><blockquote><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时。</p><p>Hexo基于Nodejs进行编写</p></blockquote><p>Linux：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install nodejs</span><br><span class="line">yum install npm</span><br></pre></td></tr></table></figure><p>Windows:</p><p><a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本下载安装</p><p>安装完成后需要检查是否安装成功</p><p>Windows：</p><p>桌面右键 <code>Git bash here</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm -v </span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><p><strong>可忽略</strong>国内环境大家都懂 你可以使用npm换源防止后面报错 </p><p>注：因为淘宝源更新不及时 后面许多依赖同样会导致报错 推荐使用官方源搭配Magic网络使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//查看源</span><br><span class="line">npm config get registry</span><br><span class="line">//更换源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br><span class="line">//淘宝源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="1-3-安装hexo"><a href="#1-3-安装hexo" class="headerlink" title="1.3.安装hexo"></a>1.3.安装hexo</h2><p>输入以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依然需要查看是否安装成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>新建一个文件夹并初始化hexo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mikdir Blog &amp;&amp; <span class="built_in">cd</span> Blog//新建叫Blog的文件夹，如果你是Window直接新建文件夹并在文件夹里右键打开即可</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>注意：若此时hexo init报错请使用Magic进行上网</p><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><p>接下来就可以使用了 本地查看Hexo命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在浏览器输入localhost:4000就可以看到你生成的博客了</p><h2 id="1-4-Markdown编辑器配置"><a href="#1-4-Markdown编辑器配置" class="headerlink" title="1.4.Markdown编辑器配置"></a>1.4.Markdown编辑器配置</h2><p>这里推荐Typora<a href="https://www.typora.io/">Typora — a markdown editor, markdown reader.</a></p><h1 id="2-账户配置"><a href="#2-账户配置" class="headerlink" title="2.账户配置"></a>2.账户配置</h1><h2 id="2-1-Github配置"><a href="#2-1-Github配置" class="headerlink" title="2.1.Github配置"></a>2.1.Github配置</h2><ol><li><p>首先你需要一个Github账户</p></li><li><p>新建一个仓库 推荐私人仓</p></li><li><p>在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p><p><img src="https://pic4.zhimg.com/v2-d1e47103ec1aa8675f68688c5d63bd27_r.jpg" alt="img"></p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key</p><p><img src="https://pic1.zhimg.com/v2-72a3f22c080e99343c3cc4aabce10e3c_r.jpg" alt="img"></p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#99;&#x6f;&#109;">&#x67;&#x69;&#x74;&#x40;&#103;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#99;&#x6f;&#109;</a> ：</p><p><img src="https://pic3.zhimg.com/v2-da481ffa686410becd4186c656b4ebd6_r.jpg" alt="img"></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p></li><li><p>桌面执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &quot;刚才新建的仓库有一个Clone 复制里面的链接 粘贴到这里&quot;</span><br></pre></td></tr></table></figure><p>将里面的.git(隐藏)复制到刚才新建的hexo博客里面</p></li></ol><h2 id="2-2-Vercel配置"><a href="#2-2-Vercel配置" class="headerlink" title="2.2.Vercel配置"></a>2.2.Vercel配置</h2><p>1、先对刚才的源代码进行一次提交1、添加文件到版本库缓存区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>2、添加文件到版本库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;备注信息&quot;</span></span><br></pre></td></tr></table></figure><p>3、请忽略</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="keyword">add</span> origin 远程库地址</span><br></pre></td></tr></table></figure><p>4、push到远程仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main(推送到的分支名称)</span><br></pre></td></tr></table></figure><ol><li>新建一个<a href="https://vercel.com/">Vercel</a>账户</li><li>点击New Project </li><li>Add Github account </li><li><img src="https://img1.tianli0.top/hexo/vercel.png">一直愉快的下一步</li><li>博客部署成功 以后上传会自动部署 若需要绑定自定义域名在Settings里面绑定即可</li></ol><h1 id="3-Hexo的使用"><a href="#3-Hexo的使用" class="headerlink" title="3.Hexo的使用"></a>3.Hexo的使用</h1><p>现在来介绍常用的Hexo 命令</p><p>npm install hexo -g #安装Hexo<br>npm update hexo -g #升级<br>hexo init #初始化博客</p><p>命令简写</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署 若使用我的教程 请忽略</span></span><br><span class="line"></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure><p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p><p>最后修改confi.yml里面的内容 </p><h2 id="3-2主题的使用"><a href="#3-2主题的使用" class="headerlink" title="3.2主题的使用"></a>3.2主题的使用</h2><p>我的主题为<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a></p><p>请参考里面的文档进行配置 开发者已经写的很详细了，这里不再赘述</p><hr><h1 id="我的魔改"><a href="#我的魔改" class="headerlink" title="我的魔改"></a>我的魔改</h1><p><strong>注意：因为随机动漫壁纸的API源站受到攻击，目前已关闭访问，因次现在访问我的博客是蓝底无图（可能过两天恢复）</strong></p><p>网站因备案即将闭站</p><p>我的魔改均来自<a href="https://zfe.space/">小冰</a>以及<a href="https://akilar.top/">AKI</a>（不是酷安的那个）</p><p><img src="https://img1.tianli0.top/hexo/1%20%282%29.jpg"></p><p>你可以参考他们的博客或直接使用我的开源仓库<a href="https://github.com/TIANLI0/BF-OK">TIANLI0&#x2F;BF-OK: 基于butterfly的魔改版本hexo博客源码 (github.com)</a></p><p>clone到本地并修改<code>butterfly_config.yml</code></p><p>进入目录安装依赖</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>参考上文及<a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p>注意 首页轮播图在<code>BF-OK\source\_data\slider.yml</code></p><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=3pbd856b2uqsk">https://cloud.tencent.com/developer/support-plan?invite_code=3pbd856b2uqsk</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于github的图床搭建</title>
      <link href="/2021/04/25/img2/"/>
      <url>/2021/04/25/img2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于github和jsdelivr的图床搭建</p><p>这个开源项目是在看小嘉的blog时看到的，在此感谢小嘉与开发者</p></blockquote><a class="btn-beautify orange larger" href="https://git.code.tencent.com/yyhy/ImgBed"   title="开源地址"><i class="far fa-image"></i><span>开源地址</span></a>  <a class="btn-beautify orange larger" href="https://img2.tianli0.top"   title="示例地址"><i class="far fa-image"></i><span>示例地址</span></a><p><img src="https://img1.tianli0.top/img2_cover.jpeg"></p><h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><h2 id="环境准备：带php的服务器，Nginx或Apache等运行环境"><a href="#环境准备：带php的服务器，Nginx或Apache等运行环境" class="headerlink" title="环境准备：带php的服务器，Nginx或Apache等运行环境"></a>环境准备：带php的服务器，Nginx或Apache等运行环境</h2><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ol><li><p>打开SSH连接到你的服务器，cd进入你需要的目录</p></li><li><p>输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://git.code.tencent.com/yyhy/ImgBed.git</span><br></pre></td></tr></table></figure></li><li><p>打开宝塔面板新建一个站点，设置运行目录为&#x2F;Public</p></li><li><p>然后配置伪静态，Apache无需配置，nginx伪静态规则在程序根目录有个nginx.txt，复制规则配置即可</p></li><li><p>之后给所有目录777权限，然后配置&#x2F;App&#x2F;Database.php内的mysql数据库信息，还有用户名密码（后台用）,最后导入mysql数据库即可（根目录的install.sql），如果安装后出现异常问题，请配置&#x2F;App&#x2F;Config.php中的debug为true</p></li><li><p>默认后台用户名为admin密码为123456</p></li><li><p>默认管理路径为<code>你的图床网址/admin</code></p></li><li><p>然后配置好github即可</p></li></ol><h1 id="图床api说明"><a href="#图床api说明" class="headerlink" title="图床api说明"></a>图床api说明</h1><p>APi接口文档</p><blockquote><p>说明：使用此接口你可以自行开发系统对接我们的图床系统！</p></blockquote><blockquote><p>拉取API服务器配置</p></blockquote><p>请求URL:<code>https://img2.tianli0.top/api/upload_config</code><br>请求方式:<code>GET</code><br>响应格式:<code>JSON</code><br>响应说明:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">code 状态码，为<span class="number">1</span>时正常其余都是错误</span><br><span class="line">msg 返回信息描述</span><br><span class="line">allowtype 允许上传的格式</span><br><span class="line">max_upload 最大上传大小(单位<span class="punctuation">:</span>kb)</span><br><span class="line">max_uploads 最多上传数量(用作API时基本没有实际意义)</span><br></pre></td></tr></table></figure><p>响应示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;拉取成功！&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;allowtype&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;png&quot;</span><span class="punctuation">,</span><span class="string">&quot;gif&quot;</span><span class="punctuation">,</span><span class="string">&quot;jpeg&quot;</span><span class="punctuation">,</span><span class="string">&quot;JPG&quot;</span><span class="punctuation">,</span><span class="string">&quot;PNG&quot;</span><span class="punctuation">,</span><span class="string">&quot;GIF&quot;</span><span class="punctuation">,</span><span class="string">&quot;JPEG&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_upload&quot;</span><span class="punctuation">:</span><span class="number">10240</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_uploads&quot;</span><span class="punctuation">:</span><span class="string">&quot;10&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>上传文件</p></blockquote><p>请求URL:<code>https://img2.tianli0.top/api/upload/(可选:token,在用户中心获取)</code><br>PS:带上Token即为以你用户身份上传的图片<br>请求方式:<code>POST</code><br>请求参数:<code>fileupload(FILE)</code><br>响应格式:<code>JSON</code><br>响应说明:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">success 状态码，为<span class="keyword">true</span>时正常其余都是错误</span><br><span class="line">error 上传失败时返回信息描述</span><br><span class="line">url 上传成功时返回的图片链接</span><br></pre></td></tr></table></figure><p>响应示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;success&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://img2.tianli0.top/api/img/12&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>拉取探索</p></blockquote><p>请求URL:<code>https://img2.tianli0.top/api/output/第几页(留空为第一页)</code><br>请求方式:<code>GET</code><br>响应格式:<code>JSON</code><br>响应说明:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">code 状态码，为<span class="number">1</span>时正常其余都是错误</span><br><span class="line">msg 返回信息描述</span><br><span class="line">count 当前服务器图片总数</span><br><span class="line">page 当前分页处于第几页</span><br><span class="line">pages 共有多少页</span><br><span class="line">data 数据</span><br><span class="line">data-&gt;url 图片链接</span><br><span class="line">data-&gt;addtime 上传时间戳</span><br><span class="line">data-&gt;ip 上传IP(打码处理)</span><br></pre></td></tr></table></figure><p>响应示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://img2.tianli0.top/api/img/3732&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span><span class="string">&quot;118.113.***.107&quot;</span><span class="punctuation">,</span><span class="attr">&quot;addtime&quot;</span><span class="punctuation">:</span><span class="number">1591297120</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://img2.tianli0.top/api/img/3731&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span><span class="string">&quot;14.112.***.219&quot;</span><span class="punctuation">,</span><span class="attr">&quot;addtime&quot;</span><span class="punctuation">:</span><span class="number">1591248873</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span><span class="number">3719</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;page&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span><span class="number">74</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Memories</title>
      <link href="/2021/04/10/memories/"/>
      <url>/2021/04/10/memories/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这里会记录一些我的回忆</p></blockquote><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/Memories/1.10/IMG_20200112_155435.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">高一年级</div>  <p>值得回忆的一年呐</p>  <a href='/Mem/1.10.html'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://img1.tianli0.top/Memories/2.5/IMG_002%20-%20%E5%89%AF%E6%9C%AC.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">高二年级</div>  <p>还剩一年，冲冲冲</p>  <a href='/Mem/2.5.html'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://img.api.tianli0.top' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">哦？</div>  <p>加密了，不用看，密码自己猜</p>  <a href='/PS/'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo插件推荐—博文加密插件</title>
      <link href="/2021/03/26/hexo-encrypt/"/>
      <url>/2021/03/26/hexo-encrypt/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在文章创作过程中你可能会有一些比较私密的文章，这对于动态php博客来说非常简单，可是对于hexo这样的静态博客来说太难了</p><p>偶然间我发现了<a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a>这款插件，可以加密博文，且有多种样式可选</p></blockquote><p><code>废话不多说，直接开始</code></p><h2 id="1-hexo-blog-encrypt安装"><a href="#1-hexo-blog-encrypt安装" class="headerlink" title="1.hexo-blog-encrypt安装"></a>1.<a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a>安装</h2><p>在根目录执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h2><h3 id="2-1-Front-matter配置方法"><a href="#2-1-Front-matter配置方法" class="headerlink" title="2.1.Front matter配置方法"></a>2.1.Front matter配置方法</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> 作为日记加密</span><br><span class="line">date: 2016-03-30 21:12:21</span><br><span class="line">password: mikemessi   #您的密码</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看. #提示信息</span><br><span class="line">message: 您好, 这里需要密码.  #密码框提示信息</span><br><span class="line">wrong<span class="emphasis">_pass_</span>message: 抱歉, 这个密码看着不太对, 请再试试. #密码错误提示信息</span><br><span class="line">wrong<span class="emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容. #错误信息提示</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="2-2-针对Tag的加密"><a href="#2-2-针对Tag的加密" class="headerlink" title="2.2.针对Tag的加密"></a>2.2.针对Tag的加密</h3><p>将以下代码复制到<code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">有东西被加密了,</span> <span class="string">请输入密码查看.</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">您好,</span> <span class="string">这里需要密码.</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码A</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码B</span>&#125;</span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">抱歉,</span> <span class="string">这个密码看着不太对,</span> <span class="string">请再试试.</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">这个文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure><h2 id="3-Demo"><a href="#3-Demo" class="headerlink" title="3.Demo"></a>3.<a href="https://tianli-blog.club/Test/">Demo</a></h2><h2 id="4-插件Github"><a href="#4-插件Github" class="headerlink" title="4.插件Github"></a>4.插件<a href="https://github.com/D0n9X1n/hexo-blog-encrypt">Github</a></h2><p><img src="https://img1.tianli0.top/h-g01.jpeg" alt="https://img1.tianli0.top/h-g01.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YesPlayMusic部署教程</title>
      <link href="/2021/03/13/yesplaymusic/"/>
      <url>/2021/03/13/yesplaymusic/</url>
      
        <content type="html"><![CDATA[<blockquote><p>YesPlayMusic 一款简洁美观的第三方网易云音乐</p></blockquote><br /><p align="center">  <a href="https://music.tianli0.top" target="blank">    <img src="https://music.tianli0.top\img\icons/icon.ico" alt="Logo" width="156" height="156">  </a>  <h2 align="center" style="font-weight: 600">YesPlayMusic</h2>  <p align="center">    高颜值的第三方网易云播放器    <br />    <a href="https://music.tianli0.top" target="blank"><strong>🌎 访问DEMO</strong></a>&nbsp;&nbsp;|&nbsp;&nbsp;    <a href="#%EF%B8%8F-安装" target="blank"><strong>📦️ 下载安装包</strong></a>    <br />    <br />  </p><h1 id="官方介绍"><a href="#官方介绍" class="headerlink" title="官方介绍"></a>官方介绍</h1><h2 id="✨-特性"><a href="#✨-特性" class="headerlink" title="✨ 特性"></a>✨ 特性</h2><ul><li>✅ 使用 Vue.js 全家桶开发</li><li>🔴 网易云账号登录</li><li>📺 支持 MV 播放</li><li>📃 支持歌词显示</li><li>📻 支持私人 FM</li><li>🚫🤝 无任何社交功能</li><li>🌎️ 海外用户可直接播放（需要登录网易云账号）</li><li>🔐 支持 <a href="https://github.com/nondanee/UnblockNeteaseMusic">UnblockNeteaseMusic</a>，自动使用 QQ&#x2F;酷狗&#x2F;酷我音源替换变灰歌曲链接 （网页版不支持）</li><li>⏭️ 支持 MediaSession API，可以使用系统快捷键操作上一首下一首</li><li>✔️ 每日自动签到（手机端和电脑端同时签到）</li><li>🌚 Light&#x2F;Dark Mode 自动切换</li><li>👆 支持 Touch Bar</li><li>🖥️ 支持 PWA，可在 Chrome&#x2F;Edge 里点击地址栏右边的 ➕ 安装到电脑</li><li>🙉 支持显示歌曲和专辑的 Explicit 标志</li></ul><h2 id="📦️-安装"><a href="#📦️-安装" class="headerlink" title="📦️ 安装"></a>📦️ 安装</h2><p>Electron 版本由 <a href="https://github.com/hawtim">@hawtim</a> 和 <a href="https://github.com/qier222">@qier222</a> 适配并维护，支持 macOS、Windows、Linux。</p><p>访问本项目的 <a href="https://github.com/qier222/YesPlayMusic/releases">Releases</a> 页面下载安装包，或者访问 <a href="https://dl.qier222.com/YesPlayMusic/">镜像下载站 (大陆访问更快)</a> 下载。</p><p>macOS 用户也可以通过 <code>brew install --cask yesplaymusic</code> 来安装。</p><h2 id="⚙️-部署至-Vercel"><a href="#⚙️-部署至-Vercel" class="headerlink" title="⚙️ 部署至 Vercel"></a>⚙️ 部署至 Vercel</h2><p>除了下载安装包使用，你还可以将本项目部署到 Vercel 或你的服务器上。下面是部署到 Vercel 的方法</p><ol><li><p>部署网易云 API，详情参见 <a href="https://neteasecloudmusicapi.vercel.app/#/?id=%e5%ae%89%e8%a3%85">Binaryify&#x2F;NeteaseCloudMusicApi</a> 。你也可以将 API 部署到 Vercel。</p></li><li><p>点击本仓库右上角的 Fork，复制本仓库到你的 GitHub 账号。</p></li><li><p>打开 <a href="https://vercel.com/">Vercel.com</a>，使用 GitHub 登录。</p></li><li><p>点击 Import Git Repository 并选择你刚刚复制的仓库并点击 Import。</p></li><li><p>点击 PERSONAL ACCOUNT 旁边的 Select。</p></li><li><p>点击 Environment Variables，填写 Name 为 <code>VUE_APP_NETEASE_API_URL</code>，Value 为你刚刚部署的网易云 API 地址，点击 Add。最后点击底部的 Deploy 就可以部署到 Vercel 了。</p></li></ol><h1 id="服务器部署NeteaseCloudMusicApi方法"><a href="#服务器部署NeteaseCloudMusicApi方法" class="headerlink" title="服务器部署NeteaseCloudMusicApi方法"></a>服务器部署<a href="https://neteasecloudmusicapi.vercel.app/#/?id=neteasecloudmusicapi">NeteaseCloudMusicApi</a>方法</h1><blockquote><p>环境要求：</p><p>宝塔面板 </p><p>安全组放行相应端口 </p><p>pm2管理器</p></blockquote><h2 id="安装pm2管理器"><a href="#安装pm2管理器" class="headerlink" title="安装pm2管理器"></a>安装pm2管理器<img src="https://img1.tianli0.top/music/pm2.png"></h2><h2 id="打开终端cd进入所需要目录clone-API源代码"><a href="#打开终端cd进入所需要目录clone-API源代码" class="headerlink" title="打开终端cd进入所需要目录clone API源代码"></a>打开终端cd进入所需要目录clone API源代码</h2><p>鉴于github速度过慢，这里提供coding镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://e.coding.net/tianli0/music/NeteaseCloudMusicApi.git</span><br></pre></td></tr></table></figure><h2 id="进入源代码根目录执行"><a href="#进入源代码根目录执行" class="headerlink" title="进入源代码根目录执行"></a>进入源代码根目录执行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install </span><br></pre></td></tr></table></figure><h2 id="打开pm2管理器"><a href="#打开pm2管理器" class="headerlink" title="打开pm2管理器"></a>打开pm2管理器</h2><p><img src="https://img1.tianli0.top/music/pm2.png"></p><p>输入项目所在根目录</p><p>启动文件名称为app.js</p><p>点击添加</p><h2 id="点击映射"><a href="#点击映射" class="headerlink" title="点击映射"></a>点击映射</h2><p><img src="https://img1.tianli0.top/music/1.png"></p><p>添加所需要域名</p><p>至此API应该部署完成了，大家懒得部署的也可以访问我的<a href="https://music.api.tianli0.top/">API</a></p><h1 id="YesPlayMusic部署"><a href="#YesPlayMusic部署" class="headerlink" title="YesPlayMusic部署"></a>YesPlayMusic部署</h1><h2 id="⚙️-部署至-Vercel-1"><a href="#⚙️-部署至-Vercel-1" class="headerlink" title="⚙️ 部署至 Vercel"></a>⚙️ 部署至 Vercel</h2><p>除了下载安装包使用，你还可以将本项目部署到 Vercel 或你的服务器上。下面是部署到 Vercel 的方法</p><ol><li>部署网易云 API，详情参见 <a href="https://neteasecloudmusicapi.vercel.app/#/?id=%E5%AE%89%E8%A3%85">Binaryify&#x2F;NeteaseCloudMusicApi</a> 。你也可以将 API 部署到 Vercel。</li><li>点击本仓库右上角的 Fork，复制本仓库到你的 GitHub 账号。</li><li>打开 <a href="https://vercel.com/">Vercel.com</a>，使用 GitHub 登录。</li><li>点击 Import Git Repository 并选择你刚刚复制的仓库并点击 Import。</li><li>点击 PERSONAL ACCOUNT 旁边的 Select。</li><li>点击 Environment Variables，填写 Name 为 <code>VUE_APP_NETEASE_API_URL</code>，Value 为你刚刚部署的网易云 API 地址，点击 Add。最后点击底部的 Deploy 就可以部署到 Vercel 了。</li></ol><h2 id="👷‍♂️-打包客户端"><a href="#👷‍♂️-打包客户端" class="headerlink" title="👷‍♂️ 打包客户端"></a>👷‍♂️ 打包客户端</h2><p>如果在 Release 页面没有找到适合你的设备的安装包的话，你可以根据下面的步骤来打包自己的客户端。</p><ol><li>打包 Electron 需要用到 Node.js 和 Yarn。可前往 <a href="https://nodejs.org/zh-cn/">Node.js 官网</a> 下载安装包。安装 Node.js 后可在终端里执行 <code>npm install -g yarn</code> 来安装 Yarn。</li><li>使用 <code>git clone https://github.com/qier222/YesPlayMusic.git</code> 克隆本仓库到本地。</li><li>使用 <code>yarn install</code> 安装项目依赖。</li><li>复制 <code>/.env.example</code> 文件为 <code>/.env</code> 。</li><li>选择下列表格的命令来打包适合的你的安装包，打包出来的文件在 <code>/dist_electron</code> 目录下。了解更多信息可访问 <a href="https://www.electron.build/cli">electron-builder 文档</a></li></ol><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>yarn electron:build --windows nsis:ia32</code></td><td>Windows 32 位</td></tr><tr><td><code>yarn electron:build --windows nsis:arm64</code></td><td>Windows ARM</td></tr><tr><td><code>yarn electron:build --linux deb:armv7l</code></td><td>Debian armv7l（树莓派等）</td></tr><tr><td><code>yarn electron:build --macos dir:arm64</code></td><td>macOS ARM</td></tr></tbody></table><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><ol><li><p>进入clone的YesPlayMusic源代码<a href="https://github.com/qier222/YesPlayMusic">https://github.com/qier222/YesPlayMusic</a></p></li><li><p>修改文件.env.example 将其重命名为.env</p></li><li><p>修改 VUE_APP_NETEASE_API_URL &#x3D; 后的数据为你刚才部署的 API 的地址</p></li><li><p>VUE_APP_ELECTRON_API_URL &#x3D; 后的数据填写 &#x2F;</p></li><li><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure><p>生成的最终静态文件在<code>dist</code>目录</p></li></ol><h1 id="非服务器部署-NeteaseCloud"><a href="#非服务器部署-NeteaseCloud" class="headerlink" title="非服务器部署[NeteaseCloud"></a>非服务器部署[NeteaseCloud</h1><h1 id="MusicApi方法"><a href="#MusicApi方法" class="headerlink" title="MusicApi方法"></a><a href="https://neteasecloudmusicapi.vercel.app/#/?id=neteasecloudmusicapi">MusicApi</a>方法</h1><h2 id="Vercel-部署"><a href="#Vercel-部署" class="headerlink" title="Vercel 部署"></a><a href="https://neteasecloudmusicapi.vercel.app/#/?id=vercel-%E9%83%A8%E7%BD%B2">Vercel 部署</a></h2><p>v4.0.8 加入了 Vercel 配置文件,可以直接在 Vercel 下部署了,不需要自己的服务器</p><h3 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a><a href="https://neteasecloudmusicapi.vercel.app/#/?id=%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95">操作方法</a></h3><ol><li>fork 此项目</li><li>在 Vercel 官网点击 <code>New Project</code></li><li>点击 <code>Import Git Repository</code> 并选择你 fork 的此项目并点击<code>import</code></li><li>点击 <code>PERSONAL ACCOUNT</code> 的 <code>select</code></li><li>直接点<code>Continue</code></li><li><code>PROJECT NAME</code>自己填,<code>FRAMEWORK PRESET</code> 选 <code>Other</code> 然后直接点 <code>Deploy</code> 接着等部署完成即可</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喜大奔普，四川省网站备案，年龄限制终于降低了</title>
      <link href="/2021/02/25/beian/"/>
      <url>/2021/02/25/beian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在很早之前就想ICP备案了，可惜因为年龄限制，一直没去，不过今年嫖了腾讯云轻量1200的券，买了一台一直到2022-09-30的应用服务器，买的国内，需要备案，但是一看四川省年龄限制 18岁</p><p>[博客没开说说，就这样发吧，顺便水了（bushi）]</p></blockquote><p>  于是我就想着，嫖都嫖了，总不可能退，然后打开了四川省通信管理局官网，准备查一下年龄限制，然后一看见局长信箱，立马填上反馈</p><p>在2&#x2F;19通信管理局工作人员就来电话告诉我四川省的备案年龄限制为18周岁，16周岁需提供工作证明</p><p>当时还是很沮丧的，于是就让我妈代备案</p><p>然后到了2&#x2F;24号通信管理局再次来了电话，告知了我经过他们考虑</p><p>年龄限制做了进一步修改</p><blockquote><p>这波我可以吹一年</p></blockquote><p><strong>具体要求如下，目前和云服务商还在对接中，所以云服务商的规则还未修改</strong></p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/beian/%E5%A4%87%E6%A1%88%E8%A7%84%E5%88%99.jpg"></p><a class="btn-beautify orange larger" href="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/beian/%E5%A4%87%E6%A1%88%E8%A7%84%E5%88%99.pdf"   title="文档下载链接"><i class="far fa-hand-point-right"></i><span>文档下载链接</span></a><h1 id="注意，最终备案规则请以云服务商提供资料为准，文档不够全面，因为是给我打的电话，录音只录了一点"><a href="#注意，最终备案规则请以云服务商提供资料为准，文档不够全面，因为是给我打的电话，录音只录了一点" class="headerlink" title="注意，最终备案规则请以云服务商提供资料为准，文档不够全面，因为是给我打的电话，录音只录了一点"></a>注意，最终备案规则请以云服务商提供资料为准，文档不够全面，因为是给我打的电话，录音只录了一点</h1><h3 id="目前，腾讯云已完成备案-阿里云正在接入中"><a href="#目前，腾讯云已完成备案-阿里云正在接入中" class="headerlink" title="目前，腾讯云已完成备案 阿里云正在接入中"></a>目前，腾讯云已完成备案 阿里云正在接入中</h3><h1 id="个人备案"><a href="#个人备案" class="headerlink" title="个人备案"></a>个人备案</h1><h3 id="主体相关"><a href="#主体相关" class="headerlink" title="主体相关"></a>主体相关</h3><ol><li>负责人需年满16周岁。<ul><li>负责人年满16周岁以上未满18周岁，以自己的劳动收入为主要的生活来源，可以履行网站备案手续，但需要提供工作证明。</li><li>负责人年满16周岁以上未满18周岁，不是以自己的劳动收入为主要的生活来源，履行网站备案手续时需提交监护人有效身份证件正反面、监护人与网站主办者户口簿首页和个人信息页、监护人同意备案情况说明等。</li></ul></li><li>负责人证件号码不能为其他主体备案过。</li></ol><h3 id="证件相关"><a href="#证件相关" class="headerlink" title="证件相关"></a>证件相关</h3><ol><li>个人备案如证件地址非本省，需提供在四川学习、生活、工作的相关证明，例如：学生证、社保、聘用合同、居住证等。</li><li>证件需上传原件进行备案。</li></ol><h3 id="网站名称相关"><a href="#网站名称相关" class="headerlink" title="网站名称相关"></a>网站名称相关</h3><p>网站名称不能是域名、英文、姓名、数字且要三个字以上来命名。</p><h3 id="变更相关"><a href="#变更相关" class="headerlink" title="变更相关"></a>变更相关</h3><ol><li>个人变更为企业时，负责人必须为该企业的法定代表人。</li><li>无腾讯云主体的新增网站和新增接入，新信息和之前的信息必须一致，如不一致，需先去原接入商变更为新信息。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> ICP备案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你也可以拥有自己的随机图片api</title>
      <link href="/2021/02/16/dmapi/"/>
      <url>/2021/02/16/dmapi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>如果你经常访问我的主页面你会发现，每次刷新，背景图都不一样。这是因为我使用了随即图片的api，那么网络上那么多随机图片的api，但是觉得质量不够怎么办呢？十几行代码轻松解决问题。</p></blockquote><h1 id="我的api"><a href="#我的api" class="headerlink" title="我的api"></a>我的api</h1><p>api链接:<a href="https://img.api.tianli0.top/">https://img.api.tianli0.top</a></p><p><strong>服务器预计将在3月迁移</strong></p><blockquote><p>所有图片都会在图库更新:</p></blockquote>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/123%20%2826%29.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">动漫壁纸</div>  <p>很漂亮的二刺螈壁纸啦</p>  <a href='/gallery/wallpaper.html'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/bwt/1613378591933.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">2233专区</div>  <p>收藏的2233高清壁纸</p>  <a href='/gallery/2233.html'></a>  </figcaption>  </figure>  <p><strong>效果展示:</strong></p><p><img src="https://img.api.tianli0.top/" alt="api效果（刷新可换图片）"></p><h1 id="自建api"><a href="#自建api" class="headerlink" title="自建api"></a>自建api</h1><h2 id="1-配置要求"><a href="#1-配置要求" class="headerlink" title="1.配置要求"></a>1.配置要求</h2><ol><li>带php的服务器</li><li>支持php语言的编辑器</li><li>会<code>CTRL+C</code> <code>CTRL+V</code></li></ol><h2 id="2-正式开始"><a href="#2-正式开始" class="headerlink" title="2.正式开始"></a>2.正式开始</h2><ol><li><p>新建文件<code>index.php</code>，用编辑器打开输入以下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;img.txt&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;文件不存在&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从文本获取链接</span></span><br><span class="line"><span class="variable">$pics</span> = [];</span><br><span class="line"><span class="variable">$fs</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$fs</span>))&#123;</span><br><span class="line">    <span class="variable">$line</span>=<span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(<span class="variable">$fs</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$line</span>!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$pics</span>, <span class="variable">$line</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从数组随机获取链接</span></span><br><span class="line"><span class="variable">$pic</span> = <span class="variable">$pics</span>[<span class="title function_ invoke__">array_rand</span>(<span class="variable">$pics</span>)];</span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回指定格式</span></span><br><span class="line"><span class="variable">$type</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//JSON返回</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/json&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;pic&#x27;</span>=&gt;<span class="variable">$pic</span>]));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$pic</span>&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>新建文件<code>img.txt</code>并输入你的图片链接，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/bwt/1613378482723.png</span><br><span class="line">https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/bwt/1613378487460.png</span><br><span class="line">https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/bwt/1613378492085.png</span><br><span class="line">https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/bwt/1613378494541.png</span><br><span class="line">https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/web/bwt/1613378497358.png</span><br><span class="line">#注意，要一行一行的输入链接</span><br></pre></td></tr></table></figure></li><li><p>放入服务器网站目录即可运行</p></li><li><p>通过爬虫爬取，因为我不会py，这里就放一个老哥的教程链接啦<a href="https://blog.lyh6.top/post/xiaojiejiebizhi/">https://blog.lyh6.top/post/xiaojiejiebizhi/</a></p></li></ol><p>代码解释：读取当前目录<code>img.txt</code>文件里的链接数据，并随机重定向到一个链接</p><blockquote><p>本教程参照了网络上其他大佬的教程，但是由于历史悠久，原教程链接找不到了。</p></blockquote><hr><h1 id="优秀随机图片api推荐"><a href="#优秀随机图片api推荐" class="headerlink" title="优秀随机图片api推荐"></a>优秀随机图片api推荐</h1><blockquote><p>岁月小筑 <a href="https://img.xjh.me/">https://img.xjh.me</a></p></blockquote><p><a href="https://img.xjh.me/random_img.php?return=302&type=bg&ctype=acg"><img src="https://img.xjh.me/random_img.php?return=302&type=bg&ctype=acg" alt="。"></a></p><blockquote><p>保罗API <a href="https://api.paugram.com/help/wallpaper">https://api.paugram.com/help/wallpaper</a></p></blockquote><p><a href="https://api.paugram.com/wallpaper/?source=sina&category=jp"><img src="https://api.paugram.com/wallpaper/?source=sina&category=jp" alt="。"></a></p><blockquote><p>搏天API <a href="https://api.btstu.cn/doc/sjbz.php">https://api.btstu.cn/doc/sjbz.php</a></p></blockquote><p><a href="https://api.btstu.cn/sjbz/api.php?lx=dongman&format=images"><img src="https://api.btstu.cn/sjbz/api.php?lx=dongman&format=images" alt="。"></a></p><blockquote><p>墨天逸 <a href="http://api.mtyqx.cn/">http://api.mtyqx.cn</a></p></blockquote><p><a href="http://api.mtyqx.cn/tapi/random.php"><img src="http://api.mtyqx.cn/tapi/random.php" alt="。"></a></p><blockquote><p>暗鸭api <a href="https://img.r10086.com/">https://img.r10086.com/</a> 多种api任君挑选</p></blockquote><p><img src="https://api.r10086.com/%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%882.php"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>限量免费赠送office365e5账号</title>
      <link href="/2021/02/07/office/"/>
      <url>/2021/02/07/office/</url>
      
        <content type="html"><![CDATA[<p><strong>限时免费赠送office365 e5 2T账号了，限量10个</strong></p><p>需要的朋友在评论区留下你需要的账号和邮箱即可，届时密码会发送到你的邮箱</p><p>账号有问题可以点击此页面右下角<strong>SMS</strong>联系我<br>Test<img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.8/5896ec2cb7f39.gif"></p>]]></content>
      
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生学堂查看市排名</title>
      <link href="/2021/01/28/sxt/"/>
      <url>/2021/01/28/sxt/</url>
      
        <content type="html"><![CDATA[<blockquote><p>引入：鉴于绵阳市教研所不对成绩排名等信息完全公开，这个时候就需要一定的技术手段来解决。此文章就是对获取这些数据的教程。</p></blockquote><blockquote><p>1.首先确保你有足够的技术和理解能力来折腾</p></blockquote><blockquote><p>2.请勿用于非法用途</p></blockquote><hr><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="APP安装及环境配置"><a href="#APP安装及环境配置" class="headerlink" title="APP安装及环境配置"></a>APP安装及环境配置</h2><h3 id="升学堂学生端的安装"><a href="#升学堂学生端的安装" class="headerlink" title="升学堂学生端的安装"></a>升学堂学生端的安装</h3><p>本文不做赘述</p><h3 id="抓包软件安装及环境配置"><a href="#抓包软件安装及环境配置" class="headerlink" title="抓包软件安装及环境配置"></a>抓包软件安装及环境配置</h3><p>本教程使用<a href="https://www.lanzoui.com/iderqgx2u9a">Httpcanary</a>(点击即刻下载）</p><ol><li>下载并安装</li><li>进入主界面-&gt;从左向右滑-&gt;进入设置页</li><li><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/sxt/2.jpg" alt="如图">进入SSL证书设置，导入证书</li><li>接下来跟着系统提示走就行了</li></ol><hr><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><h2 id="抓包引入"><a href="#抓包引入" class="headerlink" title="抓包引入"></a>抓包引入</h2><p>抓包介绍：抓包（packet capture）就是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全。抓包也经常被用来进行数据截取等<br>更多资料可以查看👉🏻<a href="https://baike.baidu.com/item/%E6%8A%93%E5%8C%85/9929103">百度百科</a></p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><h3 id="抓包设置"><a href="#抓包设置" class="headerlink" title="抓包设置"></a>抓包设置</h3><ol><li>把抓包目标应用设置为升学堂学生端<br><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/sxt/2.jpg" alt="s"><br>上面配置SSL证书那个设置界面，自己找</li><li>回到HttpCanary主界面，右下角有个飞机按钮，点一下</li><li>打卡升学堂成绩详情页面</li><li>返回到httpCanary</li><li>再点一下小飞机在搜索界面搜索<code>http://portal.sxw.cn/sxt-h5/api/gateway/analysis/AnalysisMobileStudentApi_findScoreList</code></li><li>打开<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/sxt/3.jpg" alt=",">如图所示内容再点一下就是此次成绩的json文件了</li><li>含义解释:</li></ol><p><code>classRank :班级排名 schoolRank :学校排名 rank:考试有效排名人数 countyRank :  总排名 gainScore :  分数</code><br>其他请自行翻译</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>有什么问题可以在评论区问我<br>不会搞的不要瞎搞<br>评论区邮箱只需要填写QQ<br>转载请注明链接<br>本文的APP来源于网络</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信烽火HG2543C1光猫超管密码获取教程</title>
      <link href="/2021/01/17/dian-xin-feng-huo-hg2543c1-guang-mao-chao-guan-mi-ma-huo-qu-jiao-cheng/"/>
      <url>/2021/01/17/dian-xin-feng-huo-hg2543c1-guang-mao-chao-guan-mi-ma-huo-qu-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>之前因为我家那个华为的光猫HG8120C是百兆猫，所以我就”联系”电信换了一个千兆的烽火HG2543C1</p><p>现在直接进入正文：</p><h2 id="1-首先打开浏览器输入"><a href="#1-首先打开浏览器输入" class="headerlink" title="1.首先打开浏览器输入"></a>1.首先打开浏览器输入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.1:8080/cgi-bin/telnetenable.cgi?telnetenable=1</span><br></pre></td></tr></table></figure><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/2.jpg" alt="img"></p><h3 id="打开光猫的telnet"><a href="#打开光猫的telnet" class="headerlink" title="打开光猫的telnet"></a>打开光猫的telnet</h3><p>Tips:Win默认关闭telnet，需要手动打开，首先打开控制面板→程序和功能→如图所示</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/3.jpg" alt="img"></p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/4.jpg" alt="img"></p><p>勾选☑️并确定，</p><h2 id="2-命令提示符输入"><a href="#2-命令提示符输入" class="headerlink" title="2.命令提示符输入"></a>2.命令提示符输入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.1.1</span><br></pre></td></tr></table></figure><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/5.jpg" alt="img"></p><h2 id="3-然后输入账号：root"><a href="#3-然后输入账号：root" class="headerlink" title="3.然后输入账号：root"></a>3.然后输入账号：root</h2><p>密码是你默认的WIFI密码和管理密码</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/6.jpg" alt="img"></p><p>例如我的密码就是:verlnzugwb9jy</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/7.jpg" alt="img"></p><p>密码正确就是这样</p><h2 id="4-输入"><a href="#4-输入" class="headerlink" title="4.输入"></a>4.输入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /flash/cfg/agentconf/factory.conf</span><br></pre></td></tr></table></figure><p>出来的第二行就是超管账号和密码了</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/In/8.jpg" alt="img"></p><p>如图</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 电信光猫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/01/01/hello-world/"/>
      <url>/2021/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="tianli-blog.club">Tianli’s blog</a>! 这是一个基于hexo搭建的博客。</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>主题：butterfly</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作为一个普通的NAS，玩客云怎么样</title>
      <link href="/2020/03/01/zuo-wei-yi-ge-pu-tong-de-nas-wan-ke-yun-zen-me-yang/"/>
      <url>/2020/03/01/zuo-wei-yi-ge-pu-tong-de-nas-wan-ke-yun-zen-me-yang/</url>
      
        <content type="html"><![CDATA[<ul><li><input disabled="" type="checkbox"> 先不聊这个，大家先看官方宣传图<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽" style="zoom:33%;" /></li></ul><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/2.jpg" alt="img"></p><p>事情不简单</p><p>前几天和<a href="https://www.coolapk.com/u/Strit">@Strit</a> 看见了一个老哥的评测<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽" style="zoom:25%;" />原文链接：<a href="https://www.coolapk.com/feed/16832235?shareKey=YWFkYTczMGFkODIzNWU1YjIyNzE~&shareUid=1382033&shareFrom=com.coolapk.market_10.0.1">查看链接</a><br>我俩都觉得这玩意儿做一个轻NAS很香，于是Strit.就跟我一起商量都整一个，我当时想着我有天翼云的永久会员何必整那玩意儿。所以他就整了一个<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_63_liuhanhuaji.png" alt="流汗滑稽" style="zoom:25%;" />没过几天，我电脑突然无法开机，后面检测发现机械硬盘有点坏道，整好之后我就买了一个硬盘盒，把这个硬盘当移动硬盘用。</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/3.jpg" alt="img"></p><p>别问我为什么买这么贵的，也许这就叫富有吧[喵喵口罩]</p><p>后面，我按耐不住自己，又听说这货相当于永久迅雷会员，就买了<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽" style="zoom:25%;" /></p><p>接下来进入正题，在2020年，玩客云还能干什么：<br>首先，它有一个迅雷的称号，下载种子肯定少不了</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/4.jpg" alt="img"></p><p>注意云添加</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/5.jpg" alt="img"></p><p>发现精彩不是我的资源，广告，避免一部分人说我开车</p><p>（<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_63_liuhanhuaji.png" alt="流汗滑稽" style="zoom:25%;" />什么？你想下那种片？没门。迅雷敏感资源识别。但是苍老师是不是白名单我就不知道了）<br>我家是百兆网，上图网速能够跑满百分之七八十左右。<br>PS:这个云添加也可以下载其它文件，自带百度，谷歌。不过，手机端云添加只能下载种子，而电脑端玩客云太鸡肋，我下载的文件都打不开，只能用Samba1.0协议</p><p>至于挖矿!大家都懂，每天几毛钱，电费都不够，而且我这是退出协议的，不想再进去。听说几年前炒到几千，许多老哥估计都哭晕了!</p><p>软件特点的话还有DLNA，DLNA<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_105_tnaikezui.png" alt="t耐克嘴" style="zoom:25%;" />不知道是不是我的问题，除了玩客云自家软件其他的APP都连不上。</p><p>接下来说下远场访问速度</p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/6.jpg" alt="img"></p><p>如图</p><p>（我家上传带宽20M，据官网介绍，远场访问最快速度4M&#x2F;S）1.7M&#x2F;S，普通办公传传文件够用了。当然肯定不能当做专业NAS用<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_63_liuhanhuaji.png" alt="流汗滑稽" style="zoom:25%;" />。毕竟大多数办公都需要大文件。1.7M&#x2F;S肯定会疯。</p><p>最后，来谈谈硬件：<br>USB接口X2，两个USB2.0接口<img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/coolapk_emotion_63_liuhanhuaji.png" alt="流汗滑稽" style="zoom:25%;" />速度堪忧而且我还是机械硬盘。<br>这估计是很多人想买却放弃想法</p><p>HDMI×1，要是你愿意的话还能当电视盒子用，网络上有大佬刷机成安卓系统用的教程。不过美中不足的是没有音频输出，普通电脑显示器都不带音响的吧</p><p>SD卡接口×1，可以传传摄像机上的照片什么的。<br>千兆网线接口×1，网速比文件传输速度快很多系列</p><p>电源。。</p><p>最后：我看见许多酷友说硬盘不会自动休眠，需要有Linux禁止文件权限，不过我为了方便就直接用的NTFS文件系统，然后禁止了所有权限，.onething_data改为只读，测试时，三分钟硬盘没有文件传输就自动休眠了。完全不用担心。（别问为什么这么快，问就是硬盘盒主控芯片）</p><p>这篇图文写的时候我头有点痛</p><p>所以有点杂乱无章，请见谅，以上仅仅代表个人观点 <a href="https://www.coolapk.com/t/NAS?type=12">#NAS#</a>  </p><p><img src="https://tuchuang-1258604854.cos.ap-chengdu.myqcloud.com/coolapk/NAS/7.jpg" alt="img"></p><p>我兄弟<a href="https://www.coolapk.com/u/Strit">@Strit</a> 的友链</p><p><a href="https://www.coolapk.com/feed/16812553?shareKey=YzAzZDhlZTZhZmZhNWU1YjIyNzE~&shareUid=1382033&shareFrom=com.coolapk.market_10.0.1">查看链接</a><img src="https://cdn.jsdelivr.net/npm/chenyfan-oss@1.1.8/TlAGjm6IvJSMVpq.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 体验 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
